{"version":3,"sources":["Data/countriesAndLanguages.js","Utils/getLanguagesForCurrentCountry.js","Components/Carousel/index.js","Utils/getDateConventionalString.js","Utils/getValueByNs.js","Utils/setValueByNs.js","Components/WidgetItem/index.js","Utils/Requester.js","Data/mockWidgetDataObj.js","Data/translations.js","Utils/getTranslation.js","Components/LoginDialog/index.js","Components/ReposDialog/index.js","Components/Widgets/index.js","Components/UI/index.js","App.js","serviceWorker.js","index.js"],"names":["countriesAndLanguages","AT","BY","CH","GB","IE","NL","getLanguagesForCurrentCountry","currentCountry","JSON","parse","localStorage","getItem","name","split","toUpperCase","beautify","require","Carousel","props","state","arrayOfItems","isSortable","isChanged","creds","user","token","repoName","sha","requester","Requester","env","window","carousels","Map","set","toLowerCase","that","this","options","url","auth","request","error","response","body","statusCode","console","responseBody","path","download_url","fetchDataForItems","pathToData","arrayOfItemsData","drawItems","setInterval","areChangesMade","setState","isOldStorageNotToBeFilled","arrayOfWidgetComponents","arrayOfDataObjects","saveAndRender","setItem","stringify","forEach","itemDataObj","push","key","shortid","generate","data","id","iw_id","addToQueue","dataObj","length","sort","a","b","Number","iw_index","index","imageUrl","iw_fullImg","undefined","fileName","dataString","method","log","content","modifiedArrayOfDataObjects","map","startsWith","sendImage","Object","keys","fromDate","getDateConventionalString","Date","getTime","tillDate","sendJSON","Buffer","from","toString","widgetDataObj","storageKey","arrayOfWidgetsDataObjects","arrayOfIDsAndPositions","widgetItem","obj","pos","document","getElementById","getBoundingClientRect","x","arrayOfOrderedComponents","reactComponent","sortedArrayOfWidgetsDataObjects","widgetID","updatedArray","filter","conditionalBlock","variant","className","onClick","handlePublish","bind","getTranslation","handleRevert","component","gutterBottom","handleOrderToggle","addWidget","getMockWidgetDataObj","Component","milliseconds","ms","toISOString","getValueByNs","defaultValue","setValueByNs","value","slice","Alert","elevation","styles","title","color","description","marginTop","marginBottom","button","borderRadius","backgroundColor","errorPrompt","position","top","left","zIndex","audienceInputContainer","minWidth","useStyles","makeStyles","bottomSpacing","WidgetItem","classes","initialData","React","useState","widgetData","setWidgetData","defaultLanguage","createArrayOfInputs","arr","langName","Grid","container","spacing","alignItems","item","TextField","inputProps","handleCtrlEnter","e","keyCode","ctrlKey","handleEditSubmit","openEditModal","setOpenEditModal","handleCloseEditModal","removeEventListener","openCopyModal","setOpenCopyModal","handleCloseCopyModal","audience","setAudience","targetEnv","setTargetEnv","selectedFromDate","setSelectedFromDate","selectedTillDate","setSelectedTillDate","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","files","newData","assign","updateLocalStorage","newDataObj","restItems","errorSnackbar","setErrorSnackbar","hideErrorSnackbar","errorMsg","invalidInputsArray","Array","querySelectorAll","el","trim","type","checkAndSubmit","isAllowedImageExtension","isAllowedImageSize","classList","contains","getAttribute","val","updateImg","imageInputElement","endsWith","img","Image","src","URL","createObjectURL","width","height","axis","handle","defaultPosition","y","grid","scale","onStop","get","reorder","Box","Paper","style","backgroundImage","Typography","Button","size","target","href","addEventListener","Modal","open","onClose","autoComplete","justify","confirm","inputEl","add","label","FormControl","Select","onChange","event","MenuItem","utils","DateFnsUtils","disableToolbar","format","margin","date","KeyboardButtonProps","removeWidget","startIcon","Snackbar","autoHideDuration","severity","tagData","queue","interval","timer","shift","opt","callback","clb","sendTag","clearInterval","sendRequest","start","mockWidgetDataObj","lang","translations","login_heading","login_user_name","login_token","login_instructions_link","repos_heading","repos_btn","carousel_heading","carousel_main_controls_btn_reorder","carousel_main_controls_btn_add","carousel_main_controls_btn_publish","carousel_main_controls_btn_revert","widget_controls_btn_copy","widget_controls_btn_edit","keyword","FormDialog","Dialog","aria-labelledby","DialogTitle","DialogContent","autoFocus","fullWidth","DialogActions","arrayOfRepos","repoObj","location","Link","arrayOfAllRepos","setValue","RadioList","arrOfRepos","FormControlLabel","control","Radio","RadioGroup","aria-label","currentRepoObj","Widgets","UI","exact","LoginDialog","ReposDialog","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2db82811.chunk.js","sourcesContent":["export const countriesAndLanguages = {\r\n  AT: ['de'],\r\n  BY: ['be', 'ru'],\r\n  CH: ['de', 'en', 'fr', 'it'],\r\n  GB: ['en'],\r\n  IE: ['en'],\r\n  NL: ['nl']\r\n};\r\n","import { countriesAndLanguages } from './../Data/countriesAndLanguages';\r\n\r\n\r\nexport const getLanguagesForCurrentCountry = () => {\r\n  const currentCountry = JSON.parse(localStorage.getItem('instant-widgets-current-repo'))[0].name.split('capp-instantWidgets-')[1];\r\n  return countriesAndLanguages[currentCountry.toUpperCase()];\r\n}\r\n","import React, {Component} from 'react';\r\nimport './index.css';\r\nimport request from 'request';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport WidgetItem from './../WidgetItem';\r\nimport shortid from 'shortid';\r\nimport Requester from './../../Utils/Requester';\r\nimport { getDateConventionalString } from './../../Utils/getDateConventionalString';\r\nimport { getMockWidgetDataObj } from './../../Data/mockWidgetDataObj';\r\nconst beautify = require('json-beautify');\r\n\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {arrayOfItems: [], isSortable: false, isChanged: false};\r\n    this.creds = localStorage.getItem('instant-widgets-creds');\r\n    this.user = this.creds.split(':')[0];\r\n    this.token = this.creds.split(':')[1];\r\n    this.repoName = JSON.parse(localStorage.getItem('instant-widgets-current-repo'))[0].name;\r\n    this.sha = '';\r\n    this.requester = new Requester({\r\n      env: props.env,\r\n      user: this.user,\r\n      token: this.token,\r\n      repoName: this.repoName\r\n    });\r\n\r\n    if (!window.carousels) {\r\n      window.carousels = new Map();\r\n    }\r\n    window.carousels.set(props.env.toLowerCase(), this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const that = this;\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/${this.props.env.toUpperCase()}.json`,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n    \r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        const responseBody = JSON.parse(body);\r\n        const path = responseBody.download_url;\r\n        that.sha = responseBody.sha;\r\n        fetchDataForItems(path);\r\n      } else {\r\n        console.error('ERROR');\r\n      }\r\n    }\r\n    \r\n    request(options, callback);\r\n\r\n    const fetchDataForItems = (pathToData) => {\r\n      const options = {\r\n        url: pathToData\r\n      };\r\n      \r\n      function callback(error, response, body) {\r\n        if (!error && response.statusCode === 200) {\r\n          const arrayOfItemsData = JSON.parse(body);\r\n          that.drawItems(arrayOfItemsData);\r\n        } else {\r\n          console.error('ERROR');\r\n        }\r\n      }\r\n      \r\n      request(options, callback);\r\n    }\r\n\r\n    window.setInterval(() => {\r\n      const oldVal = localStorage.getItem('instant-widgets-storage-' + that.props.env + '-old');\r\n      const newVal = localStorage.getItem('instant-widgets-storage-' + that.props.env + '-new');\r\n      const areChangesMade = oldVal !== newVal;\r\n      this.setState({\r\n        arrayOfItems: this.state.arrayOfItems,\r\n        isSortable: this.state.isSortable,\r\n        isChanged: areChangesMade\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  drawItems(arrayOfItemsData, isOldStorageNotToBeFilled = false) {\r\n    const arrayOfWidgetComponents = [];\r\n    let arrayOfDataObjects = [];\r\n    const that = this;\r\n\r\n    const saveAndRender = () => {\r\n      localStorage.setItem('instant-widgets-storage-' + that.props.env + '-new', JSON.stringify(arrayOfDataObjects));\r\n      if (!isOldStorageNotToBeFilled) {\r\n        localStorage.setItem('instant-widgets-storage-' + that.props.env + '-old', JSON.stringify(arrayOfDataObjects));\r\n      }\r\n      arrayOfDataObjects.forEach(itemDataObj => {\r\n        arrayOfWidgetComponents.push(<WidgetItem key={shortid.generate()} data={itemDataObj} env={that.props.env} id={itemDataObj.iw_id}/>);\r\n      });\r\n      that.setState({\r\n        arrayOfItems: arrayOfWidgetComponents,\r\n        isSortable: that.state.isSortable,\r\n        isChanged: that.state.isChanged\r\n      });\r\n    };\r\n\r\n    const addToQueue = (dataObj) => {\r\n      arrayOfDataObjects.push(dataObj);\r\n      if (arrayOfDataObjects.length === arrayOfItemsData.length) {\r\n        //Sort Widgets by iw_index in ascending order\r\n        arrayOfDataObjects = arrayOfDataObjects.sort((a, b) => (Number(a.iw_index) > Number(b.iw_index)) ? 1 : ((Number(b.iw_index) > Number(a.iw_index)) ? -1 : 0));\r\n        saveAndRender();\r\n      }\r\n    }\r\n\r\n    arrayOfItemsData.forEach((itemDataObj, index) => {\r\n      itemDataObj.iw_id = shortid.generate();\r\n\r\n      if (!itemDataObj.iw_index) {\r\n        itemDataObj.iw_index = index;\r\n      }\r\n\r\n      if (!itemDataObj.imageUrl) {\r\n        itemDataObj.iw_fullImg = '';\r\n      }\r\n\r\n      if (itemDataObj.imageUrl && itemDataObj.iw_fullImg === undefined) {\r\n        const options = {\r\n          url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/images/${this.props.env.toUpperCase()}/${itemDataObj.imageUrl}`,\r\n          auth: {\r\n            'user': this.user,\r\n            'pass': this.token\r\n          }\r\n        };\r\n        \r\n        function callback(error, response, body) {\r\n          if (!error && response.statusCode === 200) {\r\n            const path = JSON.parse(body).download_url;\r\n            itemDataObj.iw_fullImg = path;\r\n            addToQueue(itemDataObj);\r\n          } else {\r\n            console.error('ERROR');\r\n            itemDataObj.iw_fullImg = '';\r\n            addToQueue(itemDataObj);\r\n          }\r\n        }\r\n        \r\n        request(options, callback);\r\n      } else {\r\n        addToQueue(itemDataObj);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendImage(fileName, data) {\r\n    const dataString = '{\"message\": \"Upload image\", \"content\": \"' + data + '\" }';\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/images/${this.props.env.toUpperCase()}/${fileName}`,\r\n      method: 'PUT',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n\r\n    function callback(error, response, body) {\r\n      console.log(JSON.parse(body));\r\n      if (!error && response.statusCode === 200) {\r\n        console.log(JSON.parse(body));\r\n      }\r\n    }\r\n\r\n    this.requester.addToQueue(options, callback);\r\n  }\r\n\r\n  sendJSON(data) {\r\n    const dataString = '{\"message\": \"Update JSON\", \"content\": \"' + data + '\", \"sha\": \"' + this.sha + '\" }';\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/${this.props.env.toUpperCase()}.json`,\r\n      method: 'PUT',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n\r\n    const that = this;\r\n    function callback(error, response, body) {\r\n      console.log(JSON.parse(body));\r\n      if (!error && response.statusCode === 200) {\r\n        that.sha = JSON.parse(body).content.sha;\r\n      }\r\n    }\r\n    \r\n    this.requester.addToQueue(options, callback);\r\n  }\r\n\r\n  handleRevert() {\r\n    this.drawItems(JSON.parse(localStorage.getItem('instant-widgets-storage-' + this.props.env + '-old')));\r\n  }\r\n\r\n  handlePublish() {\r\n    const arrayOfDataObjects = JSON.parse(localStorage.getItem('instant-widgets-storage-' + this.props.env + '-new'));\r\n    localStorage.setItem('instant-widgets-storage-' + this.props.env + '-old', JSON.stringify(arrayOfDataObjects));\r\n\r\n    const modifiedArrayOfDataObjects = arrayOfDataObjects.map(dataObj => {\r\n      if (dataObj.iw_fullImg.startsWith('data:image')) {\r\n        this.sendImage(dataObj.imageUrl, dataObj.iw_fullImg.split('data:image/png;base64,')[1]);\r\n      }\r\n      \r\n      Object.keys(dataObj).forEach(key => {\r\n        if (key.startsWith('iw_')) {\r\n          delete dataObj[key];\r\n        }\r\n      });\r\n\r\n      //Convert dates to conventional string\r\n      dataObj.fromDate = getDateConventionalString(new Date(dataObj.fromDate).getTime());\r\n      dataObj.tillDate = getDateConventionalString(new Date(dataObj.tillDate).getTime());\r\n\r\n      return dataObj;\r\n    });\r\n\r\n    this.sendJSON(Buffer.from(beautify(modifiedArrayOfDataObjects, null, 2), 'ascii').toString('base64'));\r\n  }\r\n\r\n  addWidget(widgetDataObj) {\r\n    const storageKey = 'instant-widgets-storage-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    widgetDataObj.iw_index = arrayOfWidgetsDataObjects.length;\r\n    arrayOfWidgetsDataObjects.push(widgetDataObj);\r\n    localStorage.setItem(storageKey, JSON.stringify(arrayOfWidgetsDataObjects));\r\n    this.drawItems(arrayOfWidgetsDataObjects, true);\r\n  }\r\n\r\n  reorder() {\r\n    const arrayOfIDsAndPositions = [];\r\n    this.state.arrayOfItems.forEach(widgetItem => {\r\n      const obj = {};\r\n      obj.id = widgetItem.props.id;\r\n      obj.pos = document.getElementById(`widget_${obj.id}`).getBoundingClientRect().x;\r\n      arrayOfIDsAndPositions.push(obj);\r\n    });\r\n    arrayOfIDsAndPositions.sort((a,b) => {return a.pos - b.pos});\r\n    const arrayOfOrderedComponents = [];\r\n    arrayOfIDsAndPositions.forEach((obj, index) => {\r\n      this.state.arrayOfItems.forEach(reactComponent => {\r\n        if (obj.id === reactComponent.props.id) {\r\n          const widgetDataObj = reactComponent.props.data;\r\n          widgetDataObj.iw_index = index;\r\n          arrayOfOrderedComponents.push(<WidgetItem key={shortid.generate()} data={widgetDataObj} env={this.props.env} id={widgetDataObj.iw_id}/>);\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      arrayOfItems: arrayOfOrderedComponents,\r\n      isSortable: this.state.isSortable,\r\n      isChanged: this.state.isChanged\r\n    });\r\n\r\n    const storageKey = 'instant-widgets-storage-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    const sortedArrayOfWidgetsDataObjects = [];\r\n    arrayOfIDsAndPositions.forEach(obj => {\r\n      arrayOfWidgetsDataObjects.forEach(widgetDataObj => {\r\n        if (obj.id === widgetDataObj.iw_id) {\r\n          sortedArrayOfWidgetsDataObjects.push(widgetDataObj);\r\n        }\r\n      });\r\n    });\r\n    localStorage.setItem(storageKey, JSON.stringify(sortedArrayOfWidgetsDataObjects));\r\n  }\r\n\r\n  handleOrderToggle() {\r\n    this.setState({\r\n      arrayOfItems: this.state.arrayOfItems,\r\n      isSortable: !this.state.isSortable,\r\n      isChanged: this.state.isChanged\r\n    });\r\n  }\r\n\r\n  removeWidget(widgetID) {\r\n    const storageKey = 'instant-widgets-storage-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    const updatedArray = arrayOfWidgetsDataObjects.filter((obj) => {\r\n      return obj.iw_id !== widgetID;\r\n    });\r\n    localStorage.setItem(storageKey, JSON.stringify(updatedArray));\r\n    this.drawItems(updatedArray, true);\r\n  }\r\n\r\n  render() {\r\n    const conditionalBlock = <Box>\r\n      <Button variant=\"contained\" className='btn btn-success' onClick={this.handlePublish.bind(this)}>\r\n        {getTranslation('carousel_main_controls_btn_publish')}\r\n      </Button>\r\n      <Button variant=\"contained\" className='btn btn-alert' onClick={this.handleRevert.bind(this)}>\r\n        {getTranslation('carousel_main_controls_btn_revert')}\r\n      </Button>\r\n    </Box>\r\n\r\n    return (\r\n      <div className={`carousel-container ${this.state.isSortable ? 'sortable js-sortable' : ''}`}>\r\n        <div className=\"carousel-main-controls-container\">\r\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n            {`${this.props.env.toUpperCase()} ${getTranslation('carousel_heading')}`} \r\n          </Typography>\r\n          <Button variant=\"contained\" className={`btn btn-neutral ${this.state.isSortable ? 'toggled' : ''}`} onClick={this.handleOrderToggle.bind(this)}>\r\n            {getTranslation('carousel_main_controls_btn_reorder')}\r\n          </Button>\r\n          <Button variant=\"contained\" className='btn btn-neutral' onClick={this.addWidget.bind(this, getMockWidgetDataObj())}>\r\n            {getTranslation('carousel_main_controls_btn_add')}\r\n          </Button>\r\n          {\r\n            this.state.isChanged ? conditionalBlock : ''\r\n          }\r\n        </div>\r\n        <div className=\"carousel-items-container\">\r\n          {this.state.arrayOfItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","//Converts 1548882000000 to '2019-01-30T21:00:00'\r\nexport const getDateConventionalString = milliseconds => {\r\n  const ms = Number(milliseconds);\r\n  const dt = new Date(ms);\r\n  const resultString = dt.toISOString().split('.')[0];\r\n\r\n  return resultString;\r\n}\r\n","/**\r\n * @function getValueByNs\r\n * @param {*} obj\r\n * @param {string} path\r\n * @param {*} defaultValue\r\n * @return {*}\r\n * @description return value from object by string path or default value\r\n * Examples:\r\n *  obj = [1,2,3]; getValueByNs(obj, 'length', 0) will return 3\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, 'length') will return ''\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, 'length', 0) will return 0\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, '1') will return 'b'\r\n *  obj = {0: 'a', 'x': {'a':5}, 2: 'c'}; getValueByNs(obj, 'x.a', 0) will return 5\r\n */\r\nconst getValueByNs = (obj, path, defaultValue = '') => {\r\n  const keys = path.split('.');\r\n  keys.forEach(key => {\r\n    if (obj) {\r\n      obj = obj[key];\r\n    }\r\n  });\r\n\r\n  return obj || defaultValue;\r\n}\r\n\r\nexport default getValueByNs;\r\n","/**\r\n * @function setValueByNs\r\n * @param {*} obj\r\n * @param {string} path\r\n * @param {*} value\r\n * @return {*}\r\n * @description https://stackoverflow.com/questions/6393943/convert-javascript-string-in-dot-notation-into-an-object-reference\r\n * Example:\r\n *  setValueByNs(obj, 'a.b.etc', 123) //returns 123 and assigns obj.a.b.etc to 123\r\n */\r\nconst setValueByNs = (obj, path, value) => {\r\n  if (typeof path == 'string')\r\n    return setValueByNs(obj, path.split('.'), value);\r\n  else if (path.length === 1 && value !== undefined)\r\n    return obj[path[0]] = value;\r\n  else if (path.length === 0)\r\n    return obj;\r\n  else\r\n    return setValueByNs(obj[path[0]], path.slice(1), value);\r\n}\r\n\r\nexport default setValueByNs;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport { getLanguagesForCurrentCountry } from './../../Utils/getLanguagesForCurrentCountry';\r\nimport getValueByNs from './../../Utils/getValueByNs';\r\nimport setValueByNs from './../../Utils/setValueByNs';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\nimport shortid from 'shortid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst styles = {\r\n  title: {\r\n    color: 'white'\r\n  },\r\n  description: {\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n    color: 'white'\r\n  },\r\n  button: {\r\n    borderRadius: '20px',\r\n    backgroundColor: 'white',\r\n    color: 'black'\r\n  },\r\n  errorPrompt: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1301\r\n  },\r\n  audienceInputContainer: {\r\n    minWidth: '160px',\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  bottomSpacing: {\r\n    marginBottom: '30px',\r\n  },\r\n});\r\n\r\nexport default function WidgetItem(props) {\r\n  const classes = useStyles(props);\r\n\r\n  const initialData = props.data;\r\n  const [widgetData, setWidgetData] = React.useState(initialData);\r\n  const defaultLanguage = getLanguagesForCurrentCountry()[0];\r\n\r\n  const createArrayOfInputs = path => {\r\n    const arr = [];\r\n    const key = path.split('.')[0];\r\n    const obj = getValueByNs(widgetData, path);\r\n    Object.keys(obj).forEach(langName => {\r\n      arr.push(\r\n        <Grid container spacing={1} alignItems=\"flex-end\" key={key + '-key-' + langName}>\r\n          <Grid item>\r\n            {langName.toUpperCase()}\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id={key + '-field-' + langName}\r\n              defaultValue={obj[langName]}\r\n              inputProps={{'data-path': path + '.' + langName}}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    return arr;\r\n  }\r\n\r\n  const handleCtrlEnter = (e) => {\r\n    if (e.keyCode===13 && e.ctrlKey) {\r\n      handleEditSubmit();\r\n    }\r\n  }\r\n\r\n  const [openEditModal, setOpenEditModal] = React.useState(false);\r\n  const handleOpenEditModal = () => {\r\n    setOpenEditModal(true);\r\n    document.addEventListener('keydown', handleCtrlEnter);\r\n  };\r\n  const handleCloseEditModal = () => {\r\n    setOpenEditModal(false);\r\n    document.removeEventListener('keydown', handleCtrlEnter);\r\n  };\r\n\r\n  const [openCopyModal, setOpenCopyModal] = React.useState(false);\r\n  const handleOpenCopyModal = () => {\r\n    setOpenCopyModal(true);\r\n  };\r\n  const handleCloseCopyModal = () => {\r\n    setOpenCopyModal(false);\r\n  };\r\n\r\n  const [audience, setAudience] = React.useState(widgetData.audience);\r\n  const handleAudienceChange = (event) => {\r\n    setAudience(event.target.value);\r\n  };\r\n\r\n  const [targetEnv, setTargetEnv] = React.useState(props.env.toUpperCase());\r\n  const handleTargetEnvChange = (event) => {\r\n    setTargetEnv(event.target.value);\r\n  };\r\n\r\n  const [selectedFromDate, setSelectedFromDate] = React.useState(new Date(widgetData.fromDate));\r\n  const handleFromDateChange = (date) => {\r\n    setSelectedFromDate(date);\r\n  };\r\n  const [selectedTillDate, setSelectedTillDate] = React.useState(new Date(widgetData.tillDate));\r\n  const handleTillDateChange = (date) => {\r\n    setSelectedTillDate(date);\r\n  };\r\n\r\n  const toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n\r\n  async function updateImg() {\r\n    const file = document.getElementById('image-input').files[0];\r\n    if (file) {\r\n      const newData = Object.assign({}, widgetData);\r\n      newData.iw_fullImg = await toBase64(file);\r\n      newData.imageUrl = shortid.generate() + '.png';\r\n      setWidgetData(newData);\r\n      updateLocalStorage(newData);\r\n    }\r\n  }\r\n\r\n  const updateLocalStorage = newDataObj => {\r\n    const allItems = JSON.parse(localStorage.getItem('instant-widgets-storage-' + props.env + '-new'));\r\n    const restItems = allItems.filter(obj => {\r\n      return obj.iw_id !== newDataObj.iw_id;\r\n    });\r\n    localStorage.setItem('instant-widgets-storage-' + props.env + '-new', JSON.stringify([newDataObj, ...restItems]));\r\n  }\r\n\r\n  const [errorSnackbar, setErrorSnackbar] = React.useState('');\r\n  const showErrorSnackbar = (msg) => {\r\n    setErrorSnackbar(msg);\r\n  };\r\n  const hideErrorSnackbar = () => {\r\n    setErrorSnackbar('');\r\n  }\r\n\r\n  const handleEditSubmit = () => {\r\n    let errorMsg = '';\r\n\r\n    const allInputsArray = Array.from(document.querySelectorAll('input'));\r\n    const invalidInputsArray = allInputsArray.filter(el => {\r\n      return !el.value.trim().length && el.type !== 'file';\r\n    });\r\n\r\n    const checkAndSubmit = () => {\r\n      if (invalidInputsArray.length) {\r\n        errorMsg = 'All fields must be filled.';\r\n      } else if (!isAllowedImageExtension) {\r\n        errorMsg = 'Image should be in PNG format.';\r\n      } else if (!isAllowedImageSize) {\r\n        errorMsg = 'Allowed image dimensions: Minimum size: 750 x 784, Maximum size: 1500 x 1568.';\r\n      }\r\n  \r\n      if (!errorMsg) {\r\n        const newData = Object.assign({}, widgetData);\r\n        if (document.getElementById('image-input').classList.contains('js-image-removed')) {\r\n          newData.imageUrl = '';\r\n          newData.iw_fullImg = '';\r\n        }\r\n        document.querySelectorAll('[data-path]').forEach(el => {\r\n          const path = el.getAttribute('data-path');\r\n          const val = el.value;\r\n          setValueByNs(newData, path, val);\r\n        });\r\n        setWidgetData(newData);\r\n        updateImg();\r\n        updateLocalStorage(newData);\r\n        handleCloseEditModal();\r\n      } else {\r\n        showErrorSnackbar(errorMsg);\r\n      }\r\n    }\r\n\r\n    const imageInputElement = document.getElementById('image-input');\r\n    let isAllowedImageExtension = true;\r\n    let isAllowedImageSize = true;\r\n    if (imageInputElement.value) {\r\n      isAllowedImageExtension = imageInputElement.value.endsWith('.png');\r\n\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(imageInputElement.files[0]);\r\n      img.onload = () => {\r\n        const minWidth = 750;\r\n        const minHeight = 784;\r\n        const maxWidth = 1500;\r\n        const maxHeight = 1568;\r\n        if (img.width < minWidth || img.width > maxWidth || img.height < minHeight || img.height > maxHeight) {\r\n          isAllowedImageSize = false;\r\n        }\r\n        checkAndSubmit();\r\n      }\r\n    } else {\r\n      checkAndSubmit();\r\n    }\r\n  }\r\n\r\n  const handleCopySubmit = () => {\r\n    window.carousels.get(targetEnv.toLowerCase()).addWidget(widgetData);\r\n    handleCloseCopyModal();\r\n  }\r\n\r\n  const handleDragStop = () => {\r\n    window.carousels.get(targetEnv.toLowerCase()).reorder();\r\n  }\r\n\r\n  const handleRemoveImageClick = () => {\r\n    if (window.confirm('Are you sure to remove the image?')) {\r\n      const inputEl = document.getElementById('image-input');\r\n      inputEl.value = '';\r\n      inputEl.classList.add('js-image-removed');\r\n    }\r\n  }\r\n\r\n  const handleRemoveWidget = () => {\r\n    if (window.confirm('Are you sure to delete this Widget?')) {\r\n      window.carousels.get(targetEnv.toLowerCase()).removeWidget(widgetData.iw_id);\r\n      handleCloseEditModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Draggable\r\n      axis=\"x\"\r\n      handle=\".js-sortable .js-widget-item-container\"\r\n      defaultPosition={{x: 0, y: 0}}\r\n      position={{x: 0, y: 0}}\r\n      grid={[25, 25]}\r\n      scale={1}\r\n      onStop={handleDragStop}>\r\n      <Box className=\"widget-item-wrapper\">\r\n        <Paper elevation={3} style={{backgroundImage: `url('${widgetData.iw_fullImg ? widgetData.iw_fullImg : '' }')`}} className=\"widget-item-container js-widget-item-container\" id={'widget_' + props.id}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={styles.title}>\r\n            {widgetData.title[defaultLanguage]}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body2\" component=\"p\" style={styles.description}>\r\n            {widgetData.description[defaultLanguage]}\r\n          </Typography>\r\n          <Button size=\"small\" color=\"primary\" variant=\"contained\" target=\"_blank\" href={widgetData.button.url} style={styles.button}>\r\n            {widgetData.button.title[defaultLanguage]}\r\n          </Button>\r\n          <Button onClick={handleOpenCopyModal} size=\"small\" color=\"default\" variant=\"contained\" className=\"widget-item-controls-btn widget-item-copy-btn\">\r\n            {getTranslation('widget_controls_btn_copy')}\r\n          </Button>\r\n          <Button onClick={handleOpenEditModal} size=\"small\" color=\"default\" variant=\"contained\" className=\"widget-item-controls-btn widget-item-edit-btn\">\r\n            {getTranslation('widget_controls_btn_edit')}\r\n          </Button>\r\n          <Modal\r\n            open={openEditModal}\r\n            onClose={handleCloseEditModal}\r\n            className=\"modal-handler\"\r\n          >\r\n            <div className=\"modal-container\">\r\n              <form autoComplete=\"off\">\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Title\r\n                    </Typography>\r\n                    {createArrayOfInputs('title')}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Description\r\n                    </Typography>\r\n                    {createArrayOfInputs('description')}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Image\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <input type=\"file\" id=\"image-input\" className=\"input-file\"></input>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleRemoveImageClick}>\r\n                      Remove image\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-start\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      More Button\r\n                    </Typography>\r\n                    <TextField id=\"btn-link-field\" label=\"Link for button\" defaultValue={widgetData.button.url} inputProps={{'data-path': 'button.url'}}/>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {createArrayOfInputs('button.title')}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Audience\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl style={styles.audienceInputContainer}>\r\n                      <Select\r\n                        id=\"audience-select\"\r\n                        value={audience}\r\n                        onChange={handleAudienceChange}\r\n                        inputProps={{'data-path': 'audience'}}\r\n                        >\r\n                        <MenuItem value='MOBILE'>MOBILE</MenuItem>\r\n                        <MenuItem value='BROADBAND'>BROADBAND</MenuItem>\r\n                        <MenuItem value='ALL'>ALL</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Availability\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From (mm/dd/yyyy)\"\r\n                        value={selectedFromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        inputProps={{'data-path': 'fromDate'}}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-till\"\r\n                        label=\"Till (mm/dd/yyyy)\"\r\n                        value={selectedTillDate}\r\n                        onChange={handleTillDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        inputProps={{'data-path': 'tillDate'}}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"secondary\" component=\"span\" onClick={handleRemoveWidget} startIcon={<DeleteIcon />}>\r\n                      Remove Widget\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleCloseEditModal}>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleEditSubmit} className=\"save-btn\">\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n              <Snackbar open={!!errorSnackbar.length} autoHideDuration={3000} onClose={hideErrorSnackbar}>\r\n                <Alert onClose={hideErrorSnackbar} severity=\"error\">\r\n                  {errorSnackbar}\r\n                </Alert>\r\n              </Snackbar>\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            open={openCopyModal}\r\n            onClose={handleCloseCopyModal}\r\n            className=\"modal-handler\"\r\n          >\r\n            <div className=\"modal-container\">\r\n              <form autoComplete=\"off\">\r\n                <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                  Select target environment\r\n                </Typography>\r\n                <FormControl className=\"copy-env-dropdown\">\r\n                  <Select\r\n                    id=\"target-env-select\"\r\n                    value={targetEnv}\r\n                    onChange={handleTargetEnvChange}\r\n                  >\r\n                    <MenuItem value='JIT'>JIT</MenuItem>\r\n                    <MenuItem value='UAT'>UAT</MenuItem>\r\n                    <MenuItem value='PROD'>PROD</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className=\"copy-btns-container\">\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleCloseCopyModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleCopySubmit}>\r\n                      COPY WIDGET\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Modal>\r\n        </Paper>\r\n        <Box className=\"widget-item-bottom-block\">\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {widgetData.audience}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {format(new Date(widgetData.fromDate), 'dd/MM/yyyy') + ' - ' + format(new Date(widgetData.tillDate), 'dd/MM/yyyy')}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Draggable>\r\n  );\r\n}\r\n","import request from 'request';\r\n\r\n\r\n//Sends requests one by one\r\nclass Requester {\r\n  constructor(tagData) {\r\n    this.queue = [];\r\n    this.interval = 2000;\r\n    this.timer = '';\r\n    this.tagData = tagData;\r\n  }\r\n\r\n  sendTag() {\r\n    const dataString = '{\"tag_name\": \"' + this.tagData.env + '-' + new Date().getTime() + '\"}';\r\n\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.tagData.repoName}/releases`,\r\n      method: 'POST',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.tagData.user,\r\n        'pass': this.tagData.token\r\n      }\r\n    };\r\n\r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        console.log(body);\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    request(options, callback);\r\n  }\r\n\r\n  sendRequest() {\r\n    if (this.queue.length) {\r\n      const dataObj = this.queue.shift();\r\n      const options = dataObj.opt;\r\n      const callback = dataObj.clb;\r\n      request(options, callback);\r\n    } else {\r\n      this.sendTag();\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  start() {\r\n    if (!this.timer) {\r\n      const that = this;\r\n      this.timer = setInterval(() => {\r\n        that.sendRequest();\r\n      }, this.interval);\r\n    }\r\n  }\r\n\r\n  addToQueue(options, callback) {\r\n    const obj = {'opt': options, 'clb': callback};\r\n    this.queue.push(obj);\r\n    this.start();\r\n  }\r\n}\r\n\r\nexport default Requester;\r\n","import { getLanguagesForCurrentCountry } from './../Utils/getLanguagesForCurrentCountry';\r\n\r\n\r\nconst mockWidgetDataObj = {\r\n  \"title\": {},\r\n  \"description\": {},\r\n  \"fromDate\": \"2020-01-01T00:00:00\",\r\n  \"tillDate\": \"2021-01-01T00:00:00\",\r\n  \"audience\": \"ALL\",\r\n  \"imageUrl\": \"\",\r\n  \"button\": {\r\n    \"url\": \"https://www.libertyglobal.com/\",\r\n    \"title\": {}\r\n  }\r\n};\r\n\r\nexport const getMockWidgetDataObj = () => {\r\n  const currentLanguages = getLanguagesForCurrentCountry();\r\n\r\n  currentLanguages.forEach(lang => {\r\n    mockWidgetDataObj.title[lang] = `Title text (${lang})`;\r\n    mockWidgetDataObj.description[lang] = `Description text (${lang})`;\r\n    mockWidgetDataObj.button.title[lang] = `Button text (${lang})`;\r\n  });\r\n\r\n  return mockWidgetDataObj;\r\n};\r\n","const translations = {\r\n  'EN': {\r\n    login_heading: 'Login with your GitHub credentials',\r\n    login_user_name: 'User Name',\r\n    login_token: 'Personal Access Token',\r\n    login_instructions_link: 'Read Me',\r\n    repos_heading: 'Pick Repository',\r\n    repos_btn: 'Start Editing',\r\n    carousel_heading: 'widgets',\r\n    carousel_main_controls_btn_reorder: 'Change order',\r\n    carousel_main_controls_btn_add: 'Add widget',\r\n    carousel_main_controls_btn_publish: 'Publish',\r\n    carousel_main_controls_btn_revert: 'Revert all changes',\r\n    widget_controls_btn_copy: 'Copy',\r\n    widget_controls_btn_edit: 'Edit'\r\n  }\r\n};\r\n\r\nexport default translations;\r\n","import translations from './../Data/translations';\r\n\r\nconst getTranslation = keyword => {\r\n  const lang = 'EN';\r\n  return translations[lang][keyword];\r\n}\r\n\r\nexport default getTranslation;\r\n","import React from 'react';\r\nimport request from 'request';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\nimport getTranslation from './../../Utils/getTranslation';\r\n\r\n\r\nexport default function FormDialog() {\r\n  const handleSubmit = () => {\r\n    const options = {\r\n      url: 'https://api.github.com/user/repos?per_page=1000',\r\n      auth: {\r\n        'user': document.getElementById('name').value,\r\n        'pass': document.getElementById('pass').value\r\n      }\r\n    };\r\n    \r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        const arrayOfAllRepos = JSON.parse(body);\r\n        const arrayOfRepos = arrayOfAllRepos.filter(repoObj => {\r\n          return repoObj.name.startsWith('capp-instantWidgets-');\r\n        });\r\n        localStorage.setItem('instant-widgets-repos', JSON.stringify(arrayOfRepos));\r\n        localStorage.setItem('instant-widgets-creds', document.getElementById('name').value + ':' + document.getElementById('pass').value);\r\n        window.location = '/repos/';\r\n      } else {\r\n        console.error('ERROR');\r\n      }\r\n    }\r\n    \r\n    request(options, callback);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={true} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{getTranslation('login_heading')}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={getTranslation('login_user_name')}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"pass\"\r\n            label={getTranslation('login_token')}\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n          <DialogActions>\r\n            <Button onClick={handleSubmit} color=\"primary\">\r\n              Login\r\n            </Button>\r\n          </DialogActions>\r\n          <Link href=\"https://google.com\">\r\n            {getTranslation('login_instructions_link')}\r\n          </Link>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport getTranslation from './../../Utils/getTranslation';\r\n\r\n\r\nexport default function FormDialog() {\r\n  const arrayOfAllRepos = JSON.parse(localStorage.getItem('instant-widgets-repos'));\r\n  const [value, setValue] = React.useState(arrayOfAllRepos[0].name);\r\n  \r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const currentRepoObj = arrayOfAllRepos.filter((repoObj => {return repoObj.name === value}));\r\n    localStorage.setItem('instant-widgets-current-repo', JSON.stringify(currentRepoObj));\r\n    window.location = '/widgets/';\r\n  };\r\n\r\n  const RadioList = ({arrOfRepos}) => (\r\n    <div>\r\n      {arrOfRepos.map((repoObj) => (\r\n        <div key={repoObj.id}><FormControlLabel value={repoObj.name} control={<Radio />} label={repoObj.name} /></div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={true} aria-labelledby=\"form-repos-dialog-title\">\r\n        <DialogTitle id=\"form-repos-dialog-title\">{getTranslation('repos_heading')}</DialogTitle>\r\n        <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"repos\" name=\"repos1\" value={value} onChange={handleChange}>\r\n            <RadioList arrOfRepos={arrayOfAllRepos} />\r\n          </RadioGroup>\r\n        </FormControl>\r\n          <DialogActions>\r\n            <Button onClick={handleSubmit} color=\"primary\">\r\n              {getTranslation('repos_btn')}\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Carousel from './../Carousel';\r\n\r\n\r\nexport default function Widgets() {\r\n  return (\r\n    <div>\r\n      <Carousel env=\"PROD\" />\r\n      <Carousel env=\"UAT\" />\r\n      <Carousel env=\"JIT\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './UI.css';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport LoginDialog from '../LoginDialog';\r\nimport ReposDialog from '../ReposDialog';\r\nimport Widgets from '../Widgets';\r\n\r\n\r\nfunction UI() {\r\n  return (\r\n    <div className=\"UI\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={LoginDialog} />\r\n          <Route path={process.env.PUBLIC_URL + '/repos'} component={ReposDialog} />\r\n          <Route path={process.env.PUBLIC_URL + '/widgets'} component={Widgets} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport UI from './Components/UI';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-Container\">\r\n      <UI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}