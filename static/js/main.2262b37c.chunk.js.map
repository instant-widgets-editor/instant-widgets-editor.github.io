{"version":3,"sources":["Data/countriesAndLanguages.js","Utils/getLanguagesForCurrentCountry.js","Components/Carousel/index.js","Utils/getValueByNs.js","Utils/setValueByNs.js","Components/WidgetItem/index.js","Utils/getUTCDate.js","Utils/getDateConventionalString.js","Utils/Requester.js","Data/translations.js","Utils/getTranslation.js","Data/mockWidgetDataObj.js","Utils/getMockWidgetDataObj.js","Utils/getCurrentCountry.js","Components/LoginDialog/index.js","Components/ReposDialog/index.js","Components/Widgets/index.js","Components/UI/index.js","App.js","serviceWorker.js","index.js","Utils/ImageStorage.js","Components/ConfirmationPopup/index.js"],"names":["countriesAndLanguages","AT","BY","CH","GB","IE","NL","PL","getLanguagesForCurrentCountry","getCurrentCountry","toUpperCase","beautify","require","convertImageUrlToBase64","Carousel","props","state","arrayOfItems","isSortable","isChanged","user","creds","login","token","personalAccessToken","repoName","currentRepo","sha","requester","Requester","env","window","carousels","Map","set","toLowerCase","console","log","this","that","options","url","auth","request","error","response","body","statusCode","responseBody","JSON","parse","path","download_url","fetchDataForItems","pathToData","arrayOfItemsData","drawItems","setInterval","areChangesMade","localStorage","getItem","setState","isOldStorageNotToBeFilled","arrayOfWidgetComponents","arrayOfDataObjects","saveAndRender","setItem","stringify","forEach","itemDataObj","push","key","shortid","generate","data","id","iw_id","addToQueue","dataObj","length","sort","a","b","Number","iw_index","index","undefined","imageUrl","ImageStorage","get","err","dataUri","fileName","dataString","split","method","notify","content","ConfirmationPopup","modifiedArrayOfDataObjects","map","sendImage","Object","keys","startsWith","fromDate","getDateConventionalString","Date","getTime","tillDate","sendJSON","Buffer","from","toString","widgetDataObj","storageKey","arrayOfWidgetsDataObjects","arrayOfIDsAndPositions","widgetItem","obj","pos","document","getElementById","getBoundingClientRect","x","arrayOfOrderedComponents","reactComponent","sortedArrayOfWidgetsDataObjects","widgetID","updatedArray","filter","conditionalBlock","variant","className","onClick","handlePublish","bind","getTranslation","handleRevert","container","direction","alignItems","component","handleOrderToggle","addWidget","getMockWidgetDataObj","Component","getValueByNs","defaultValue","setValueByNs","value","slice","Alert","elevation","styles","title","color","description","marginTop","marginBottom","button","borderRadius","backgroundColor","errorPrompt","position","top","left","zIndex","audienceInputContainer","width","minWidth","blockWithTopSpacing","minWidth50","width100","useStyles","makeStyles","topSpacing","bottomSpacing","WidgetItem","classes","initialData","React","useState","widgetData","setWidgetData","defaultLanguage","isWidgetActiveByDate","isWithinInterval","start","end","createArrayOfInputs","arr","isDescription","includes","maxNumberOfCharacters","langName","Grid","spacing","item","style","TextField","label","multiline","inputProps","maxLength","iw_isNew","openEditModal","setOpenEditModal","handleCloseEditModal","isNeedToRerender","isNeedToRemoveNewWidget","handleRemoveWidget","targetEnv","rerender","openCopyModal","setOpenCopyModal","handleCloseCopyModal","audience","setAudience","setTargetEnv","selectedFromDate","setSelectedFromDate","selectedTillDate","setSelectedTillDate","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","updateImg","files","newData","assign","updateLocalStorage","newDataObj","restItems","errorSnackbar","setErrorSnackbar","showErrorSnackbar","msg","hideErrorSnackbar","isConfirmationNeeded","removeWidget","axis","handle","defaultPosition","y","grid","scale","onStop","reorder","Box","Paper","backgroundImage","Typography","gutterBottom","Button","size","target","href","Dialog","open","onClose","autoComplete","justify","type","inputEl","classList","add","FormControl","Select","onChange","event","MenuItem","utils","DateFnsUtils","disableToolbar","format","margin","date","KeyboardButtonProps","startIcon","errorMsg","invalidInputsArray","Array","querySelectorAll","el","trim","checkAndSubmit","isImageAdded","isAllowedImageExtension","isAllowedImageSize","contains","getAttribute","val","imageInputElement","endsWith","img","Image","src","URL","createObjectURL","height","Snackbar","anchorOrigin","vertical","horizontal","severity","milliseconds","ms","dt","UTC","getFullYear","getMonth","getDate","getUTCDate","toISOString","tagData","queue","interval","timer","shift","opt","callback","clb","sendTag","clearInterval","sendRequest","translations","login_heading","login_user_name","login_token","login_instructions_link","repos_heading","repos_btn","carousel_heading","carousel_main_controls_btn_reorder","carousel_main_controls_btn_add","carousel_main_controls_btn_publish","carousel_main_controls_btn_revert","widget_controls_btn_copy","widget_controls_btn_edit","keyword","mockWidgetDataObj","lang","loginBtn","LoginDialog","aria-labelledby","DialogTitle","DialogContent","autoFocus","fullWidth","autofill","DialogActions","name","pass","arrayOfRepoNames","repoObj","setRepos","setCreds","setScreen","Link","submitBtn","ReposDialog","arrayOfAllRepos","repos","setValue","RadioList","arrOfRepos","FormControlLabel","control","Radio","RadioGroup","aria-label","e","currentRepoName","setCurrentRepo","Widgets","Screen","screen","enqueueSnackbar","useSnackbar","text","Fragment","newScreenName","newCurrentRepoName","newCreds","newRepos","UI","maxSnack","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","imageName","base64","sessionStorage","customUI","aria-describedby","childrenElement","closeOnEscape","closeOnClickOutside","willUnmount","afterClose","onClickOutside","onKeypressEscape","confirmAlert"],"mappings":"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","file":"static/js/main.2262b37c.chunk.js","sourcesContent":["export const countriesAndLanguages = {\r\n  AT: ['de'],\r\n  BY: ['be', 'ru'],\r\n  CH: ['de', 'en', 'fr', 'it'],\r\n  GB: ['en'],\r\n  IE: ['en'],\r\n  NL: ['nl'],\r\n  PL: ['pl']\r\n};\r\n","import { getCurrentCountry } from './getCurrentCountry';\r\nimport { countriesAndLanguages } from './../Data/countriesAndLanguages';\r\n\r\n\r\nexport const getLanguagesForCurrentCountry = () => {\r\n  return countriesAndLanguages[getCurrentCountry().toUpperCase()];\r\n}\r\n","import React, {Component} from 'react';\r\nimport './index.css';\r\nimport request from 'request';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport WidgetItem from './../WidgetItem';\r\nimport shortid from 'shortid';\r\nimport Requester from './../../Utils/Requester';\r\nimport { getDateConventionalString } from './../../Utils/getDateConventionalString';\r\nimport { getMockWidgetDataObj } from './../../Utils/getMockWidgetDataObj';\r\nimport { getCurrentCountry } from './../../Utils/getCurrentCountry';\r\nimport { ConfirmationPopup } from './../ConfirmationPopup';\r\nimport { ImageStorage } from './../../Utils/ImageStorage';\r\nconst beautify = require('json-beautify');\r\nconst convertImageUrlToBase64 = require('imageurl-base64');\r\n\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {arrayOfItems: [], isSortable: false, isChanged: false};\r\n    this.user = props.creds.login;\r\n    this.token = props.creds.personalAccessToken;\r\n    this.repoName = props.currentRepo;\r\n    this.sha = '';\r\n    this.requester = new Requester({\r\n      env: props.env,\r\n      user: this.user,\r\n      token: this.token,\r\n      repoName: this.repoName\r\n    });\r\n\r\n    if (!window.carousels) {\r\n      window.carousels = new Map();\r\n    }\r\n    window.carousels.set(props.env.toLowerCase(), this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.user);\r\n    const that = this;\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/${this.props.env.toUpperCase()}.json`,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n    \r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        const responseBody = JSON.parse(body);\r\n        const path = responseBody.download_url;\r\n        that.sha = responseBody.sha;\r\n        fetchDataForItems(path);\r\n      } else {\r\n        console.error('ERROR');\r\n      }\r\n    }\r\n    \r\n    request(options, callback);\r\n\r\n    const fetchDataForItems = (pathToData) => {\r\n      const options = {\r\n        url: pathToData\r\n      };\r\n      \r\n      function callback(error, response, body) {\r\n        if (!error && response.statusCode === 200) {\r\n          const arrayOfItemsData = JSON.parse(body);\r\n          that.drawItems(arrayOfItemsData);\r\n        } else {\r\n          console.error('ERROR');\r\n        }\r\n      }\r\n      \r\n      request(options, callback);\r\n    }\r\n\r\n    window.setInterval(() => {\r\n      const oldVal = localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-old');\r\n      const newVal = localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-new');\r\n      const areChangesMade = oldVal !== newVal;\r\n      this.setState({\r\n        arrayOfItems: this.state.arrayOfItems,\r\n        isSortable: this.state.isSortable,\r\n        isChanged: areChangesMade\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  drawItems(arrayOfItemsData, isOldStorageNotToBeFilled = false) {\r\n    const arrayOfWidgetComponents = [];\r\n    let arrayOfDataObjects = [];\r\n    const that = this;\r\n\r\n    const saveAndRender = () => {\r\n      localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-new', JSON.stringify(arrayOfDataObjects));\r\n      if (!isOldStorageNotToBeFilled) {\r\n        localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-old', JSON.stringify(arrayOfDataObjects));\r\n      }\r\n      arrayOfDataObjects.forEach(itemDataObj => {\r\n        arrayOfWidgetComponents.push(<WidgetItem key={shortid.generate()} data={itemDataObj} env={that.props.env} id={itemDataObj.iw_id}/>);\r\n      });\r\n      that.setState({\r\n        arrayOfItems: arrayOfWidgetComponents,\r\n        isSortable: that.state.isSortable,\r\n        isChanged: that.state.isChanged\r\n      });\r\n    };\r\n\r\n    const addToQueue = (dataObj) => {\r\n      arrayOfDataObjects.push(dataObj);\r\n      if (arrayOfDataObjects.length === arrayOfItemsData.length) {\r\n        //Sort Widgets by iw_index in ascending order\r\n        arrayOfDataObjects = arrayOfDataObjects.sort((a, b) => (Number(a.iw_index) > Number(b.iw_index)) ? 1 : ((Number(b.iw_index) > Number(a.iw_index)) ? -1 : 0));\r\n        saveAndRender();\r\n      }\r\n    }\r\n\r\n    if (!arrayOfItemsData.length) {\r\n      //Render empty carousel\r\n      saveAndRender();\r\n    }\r\n\r\n    arrayOfItemsData.forEach((itemDataObj, index) => {\r\n      itemDataObj.iw_id = itemDataObj.iw_id ? itemDataObj.iw_id : shortid.generate();\r\n\r\n      if (itemDataObj.iw_index === undefined) {\r\n        itemDataObj.iw_index = index;\r\n      }\r\n\r\n      if (itemDataObj.imageUrl && !ImageStorage.get(itemDataObj.imageUrl)) {\r\n        const options = {\r\n          url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/images/${this.props.env.toUpperCase()}/${itemDataObj.imageUrl}`,\r\n          auth: {\r\n            'user': this.user,\r\n            'pass': this.token\r\n          }\r\n        };\r\n        \r\n        function callback(error, response, body) {\r\n          if (!error && response.statusCode === 200) {\r\n            const path = JSON.parse(body).download_url;\r\n            convertImageUrlToBase64(path, (err, data) => {\r\n              ImageStorage.set(itemDataObj.imageUrl, data.dataUri);\r\n              addToQueue(itemDataObj);\r\n            });\r\n          } else {\r\n            console.error('Error: ', error);\r\n            addToQueue(itemDataObj);\r\n          }\r\n        }\r\n        \r\n        request(options, callback);\r\n      } else {\r\n        addToQueue(itemDataObj);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendImage(fileName) {\r\n    const dataString = '{\"message\": \"Upload image\", \"content\": \"' + ImageStorage.get(fileName).split('data:image/png;base64,')[1] + '\", \"sha\": \"' + this.sha + '\" }';\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/images/${this.props.env.toUpperCase()}/${fileName}`,\r\n      method: 'PUT',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n\r\n    const callback = (error, response, body) => {\r\n      console.log(JSON.parse(body));\r\n      if (!error) {\r\n        this.props.notify('Image was sent to Github', 'success');\r\n      } else {\r\n        console.error(error);\r\n        this.props.notify(error, 'error');\r\n      }\r\n    }\r\n\r\n    this.requester.addToQueue(options, callback);\r\n  }\r\n\r\n  sendJSON(data) {\r\n    const dataString = '{\"message\": \"Update JSON\", \"content\": \"' + data + '\", \"sha\": \"' + this.sha + '\" }';\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/${this.props.env.toUpperCase()}.json`,\r\n      method: 'PUT',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n\r\n    const callback = (error, response, body) => {\r\n      //console.log(JSON.parse(body));\r\n      if (!error && response.statusCode === 200) {\r\n        this.sha = JSON.parse(body).content.sha;\r\n        this.props.notify('JSON was sent to Github', 'success');\r\n      } else {\r\n        console.error(error);\r\n        this.props.notify(error, 'error');\r\n      }\r\n    }\r\n    \r\n    this.requester.addToQueue(options, callback);\r\n  }\r\n\r\n  handleRevert() {\r\n    const revert = () => {\r\n      this.drawItems(JSON.parse(localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-old')));\r\n    }\r\n\r\n    ConfirmationPopup(`Are you sure to revert all changes for ${this.props.env}?`, revert);\r\n  }\r\n\r\n  handlePublish() {\r\n    const publish = () => {\r\n      const arrayOfDataObjects = JSON.parse(localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new'));\r\n      localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-old', JSON.stringify(arrayOfDataObjects));\r\n  \r\n      const modifiedArrayOfDataObjects = arrayOfDataObjects.map(dataObj => {\r\n        if (ImageStorage.get(dataObj.imageUrl)) {\r\n          this.sendImage(dataObj.imageUrl);\r\n        }\r\n        \r\n        Object.keys(dataObj).forEach(key => {\r\n          if (key.startsWith('iw_')) {\r\n            delete dataObj[key];\r\n          }\r\n        });\r\n  \r\n        //Convert dates to conventional string\r\n        dataObj.fromDate = getDateConventionalString(new Date(dataObj.fromDate).getTime());\r\n        dataObj.tillDate = getDateConventionalString(new Date(dataObj.tillDate).getTime());\r\n  \r\n        return dataObj;\r\n      });\r\n  \r\n      this.sendJSON(Buffer.from(beautify(modifiedArrayOfDataObjects, null, 2), 'ascii').toString('base64'));\r\n    }\r\n\r\n    ConfirmationPopup(`Are you sure to publish at ${this.props.env}?`, publish);\r\n  }\r\n\r\n  addWidget(widgetDataObj) {\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    widgetDataObj.iw_id = shortid.generate();\r\n    widgetDataObj.iw_index = arrayOfWidgetsDataObjects.length;\r\n    arrayOfWidgetsDataObjects.push(widgetDataObj);\r\n    localStorage.setItem(storageKey, JSON.stringify(arrayOfWidgetsDataObjects));\r\n    this.drawItems(arrayOfWidgetsDataObjects, true);\r\n  }\r\n\r\n  reorder() {\r\n    const arrayOfIDsAndPositions = [];\r\n    this.state.arrayOfItems.forEach(widgetItem => {\r\n      const obj = {};\r\n      obj.id = widgetItem.props.id;\r\n      obj.pos = document.getElementById(`widget_${obj.id}`).getBoundingClientRect().x;\r\n      arrayOfIDsAndPositions.push(obj);\r\n    });\r\n    arrayOfIDsAndPositions.sort((a,b) => {return a.pos - b.pos});\r\n    const arrayOfOrderedComponents = [];\r\n    arrayOfIDsAndPositions.forEach((obj, index) => {\r\n      this.state.arrayOfItems.forEach(reactComponent => {\r\n        if (obj.id === reactComponent.props.id) {\r\n          const widgetDataObj = reactComponent.props.data;\r\n          widgetDataObj.iw_index = index;\r\n          arrayOfOrderedComponents.push(<WidgetItem key={shortid.generate()} data={widgetDataObj} env={this.props.env} id={widgetDataObj.iw_id}/>);\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      arrayOfItems: arrayOfOrderedComponents,\r\n      isSortable: this.state.isSortable,\r\n      isChanged: this.state.isChanged\r\n    });\r\n\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    const sortedArrayOfWidgetsDataObjects = [];\r\n    arrayOfIDsAndPositions.forEach(obj => {\r\n      arrayOfWidgetsDataObjects.forEach(widgetDataObj => {\r\n        if (obj.id === widgetDataObj.iw_id) {\r\n          sortedArrayOfWidgetsDataObjects.push(widgetDataObj);\r\n        }\r\n      });\r\n    });\r\n    localStorage.setItem(storageKey, JSON.stringify(sortedArrayOfWidgetsDataObjects));\r\n  }\r\n\r\n  handleOrderToggle() {\r\n    this.setState({\r\n      arrayOfItems: this.state.arrayOfItems,\r\n      isSortable: !this.state.isSortable,\r\n      isChanged: this.state.isChanged\r\n    });\r\n  }\r\n\r\n  removeWidget(widgetID) {\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    const updatedArray = arrayOfWidgetsDataObjects.filter((obj) => {\r\n      return obj.iw_id !== widgetID;\r\n    });\r\n    localStorage.setItem(storageKey, JSON.stringify(updatedArray));\r\n    this.drawItems(updatedArray, true);\r\n  }\r\n\r\n  rerender() {\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    this.drawItems(arrayOfWidgetsDataObjects, true);\r\n  }\r\n\r\n  render() {\r\n    const conditionalBlock = <Box>\r\n      <Button variant=\"contained\" className='btn btn-success' onClick={this.handlePublish.bind(this)}>\r\n        {getTranslation('carousel_main_controls_btn_publish')}\r\n      </Button>\r\n      <Button variant=\"contained\" className='btn btn-alert' onClick={this.handleRevert.bind(this)}>\r\n        {getTranslation('carousel_main_controls_btn_revert')}\r\n      </Button>\r\n    </Box>\r\n\r\n    return (\r\n      <div className={`carousel-container ${this.state.isSortable ? 'sortable js-sortable' : ''}`}>\r\n        <Grid className=\"carousel-main-controls-container\"\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {`${this.props.env.toUpperCase()} ${getTranslation('carousel_heading')}`} \r\n          </Typography>\r\n          <Button variant=\"contained\" className={`btn btn-neutral ${this.state.isSortable ? 'toggled' : ''}`} onClick={this.handleOrderToggle.bind(this)}>\r\n            {getTranslation('carousel_main_controls_btn_reorder')}\r\n          </Button>\r\n          <Button variant=\"contained\" className='btn btn-neutral' onClick={this.addWidget.bind(this, getMockWidgetDataObj())}>\r\n            {getTranslation('carousel_main_controls_btn_add')}\r\n          </Button>\r\n          {\r\n            this.state.isChanged ? conditionalBlock : ''\r\n          }\r\n        </Grid>\r\n        <div className=\"carousel-items-container\">\r\n          {this.state.arrayOfItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","/**\r\n * @function getValueByNs\r\n * @param {*} obj\r\n * @param {string} path\r\n * @param {*} defaultValue\r\n * @return {*}\r\n * @description return value from object by string path or default value\r\n * Examples:\r\n *  obj = [1,2,3]; getValueByNs(obj, 'length', 0) will return 3\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, 'length') will return ''\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, 'length', 0) will return 0\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, '1') will return 'b'\r\n *  obj = {0: 'a', 'x': {'a':5}, 2: 'c'}; getValueByNs(obj, 'x.a', 0) will return 5\r\n */\r\nconst getValueByNs = (obj, path, defaultValue = '') => {\r\n  const keys = path.split('.');\r\n  keys.forEach(key => {\r\n    if (obj) {\r\n      obj = obj[key];\r\n    }\r\n  });\r\n\r\n  return obj || defaultValue;\r\n}\r\n\r\nexport default getValueByNs;\r\n","/**\r\n * @function setValueByNs\r\n * @param {*} obj\r\n * @param {string} path\r\n * @param {*} value\r\n * @return {*}\r\n * @description https://stackoverflow.com/questions/6393943/convert-javascript-string-in-dot-notation-into-an-object-reference\r\n * Example:\r\n *  setValueByNs(obj, 'a.b.etc', 123) //returns 123 and assigns obj.a.b.etc to 123\r\n */\r\nconst setValueByNs = (obj, path, value) => {\r\n  if (typeof path == 'string')\r\n    return setValueByNs(obj, path.split('.'), value);\r\n  else if (path.length === 1 && value !== undefined)\r\n    return obj[path[0]] = value;\r\n  else if (path.length === 0)\r\n    return obj;\r\n  else\r\n    return setValueByNs(obj[path[0]], path.slice(1), value);\r\n}\r\n\r\nexport default setValueByNs;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport { getLanguagesForCurrentCountry } from './../../Utils/getLanguagesForCurrentCountry';\r\nimport getValueByNs from './../../Utils/getValueByNs';\r\nimport setValueByNs from './../../Utils/setValueByNs';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { format, isWithinInterval } from 'date-fns';\r\nimport shortid from 'shortid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { getCurrentCountry } from './../../Utils/getCurrentCountry';\r\nimport { ConfirmationPopup } from './../ConfirmationPopup';\r\nimport { ImageStorage } from './../../Utils/ImageStorage';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst styles = {\r\n  title: {\r\n    color: 'white'\r\n  },\r\n  description: {\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n    color: 'white'\r\n  },\r\n  button: {\r\n    borderRadius: '20px',\r\n    backgroundColor: 'white',\r\n    color: 'black'\r\n  },\r\n  errorPrompt: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1301\r\n  },\r\n  audienceInputContainer: {\r\n    width: '100%',\r\n    minWidth: '160px',\r\n  },\r\n  blockWithTopSpacing: {\r\n    marginTop: '40px',\r\n  },\r\n  minWidth50: {\r\n    minWidth: '50%',\r\n  },\r\n  width100: {\r\n    width: '100%',\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  topSpacing: {\r\n    marginTop: '30px',\r\n  },\r\n  bottomSpacing: {\r\n    marginBottom: '30px',\r\n  },\r\n});\r\n\r\nexport default function WidgetItem(props) {\r\n  const classes = useStyles(props);\r\n\r\n  const initialData = props.data;\r\n  const [widgetData, setWidgetData] = React.useState(initialData);\r\n  const defaultLanguage = getLanguagesForCurrentCountry()[0];\r\n\r\n  const isWidgetActiveByDate = isWithinInterval(new Date(), {start: new Date(widgetData.fromDate), end: new Date(widgetData.tillDate)});\r\n\r\n  const createArrayOfInputs = path => {\r\n    const arr = [];\r\n    const key = path.split('.')[0];\r\n    const obj = getValueByNs(widgetData, path);\r\n    const isDescription = path.includes('description');\r\n    const maxNumberOfCharacters = isDescription ? 120 : 22;\r\n    Object.keys(obj).forEach(langName => {\r\n      arr.push(\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          alignItems=\"center\"\r\n          key={key + '-key-' + langName}\r\n        >\r\n          <Grid item style={styles.width100}>\r\n            <TextField\r\n              id={key + '-field-' + langName}\r\n              defaultValue={obj[langName]}\r\n              label={langName.toUpperCase()}\r\n              style={styles.width100}\r\n              multiline={isDescription}\r\n              inputProps={{\r\n                'data-path': path + '.' + langName,\r\n                maxLength: maxNumberOfCharacters\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    return arr;\r\n  }\r\n\r\n  const [openEditModal, setOpenEditModal] = React.useState(!!widgetData.iw_isNew);\r\n  const handleOpenEditModal = () => {\r\n    setOpenEditModal(true);\r\n  };\r\n  const handleCloseEditModal = (isNeedToRerender = true, isNeedToRemoveNewWidget = true) => {\r\n    if (widgetData.iw_isNew && isNeedToRemoveNewWidget) {\r\n      widgetData.iw_isNew = false;\r\n      handleRemoveWidget(false);\r\n    }\r\n    setOpenEditModal(false);\r\n    if (isNeedToRerender) {\r\n      window.carousels.get(targetEnv.toLowerCase()).rerender();\r\n    }\r\n  };\r\n\r\n  const [openCopyModal, setOpenCopyModal] = React.useState(false);\r\n  const handleOpenCopyModal = () => {\r\n    setOpenCopyModal(true);\r\n  };\r\n  const handleCloseCopyModal = () => {\r\n    setOpenCopyModal(false);\r\n  };\r\n\r\n  const [audience, setAudience] = React.useState(widgetData.audience);\r\n  const handleAudienceChange = (event) => {\r\n    setAudience(event.target.value);\r\n  };\r\n\r\n  const [targetEnv, setTargetEnv] = React.useState(props.env.toUpperCase());\r\n  const handleTargetEnvChange = (event) => {\r\n    setTargetEnv(event.target.value);\r\n  };\r\n\r\n  const [selectedFromDate, setSelectedFromDate] = React.useState(new Date(widgetData.fromDate));\r\n  const handleFromDateChange = (date) => {\r\n    setSelectedFromDate(date);\r\n  };\r\n  const [selectedTillDate, setSelectedTillDate] = React.useState(new Date(widgetData.tillDate));\r\n  const handleTillDateChange = (date) => {\r\n    setSelectedTillDate(date);\r\n  };\r\n\r\n  const toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n\r\n  async function updateImg() {\r\n    const file = document.getElementById('image-input').files[0];\r\n    if (file) {\r\n      const newData = Object.assign({}, widgetData);\r\n      newData.imageUrl = shortid.generate() + '.png';\r\n      ImageStorage.set(newData.imageUrl, await toBase64(file));\r\n      setWidgetData(newData);\r\n      updateLocalStorage(newData);\r\n      window.carousels.get(targetEnv.toLowerCase()).rerender();\r\n    }\r\n  }\r\n\r\n  const updateLocalStorage = newDataObj => {\r\n    const allItems = JSON.parse(localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + props.env + '-new'));\r\n    const restItems = allItems.filter(obj => {\r\n      return obj.iw_id !== newDataObj.iw_id;\r\n    });\r\n    localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + props.env + '-new', JSON.stringify([newDataObj, ...restItems]));\r\n  }\r\n\r\n  const [errorSnackbar, setErrorSnackbar] = React.useState('');\r\n  const showErrorSnackbar = (msg) => {\r\n    setErrorSnackbar(msg);\r\n  };\r\n  const hideErrorSnackbar = () => {\r\n    setErrorSnackbar('');\r\n  }\r\n\r\n  const handleEditSubmit = () => {\r\n    let errorMsg = '';\r\n\r\n    const allInputsArray = Array.from(document.querySelectorAll('input'));\r\n    const invalidInputsArray = allInputsArray.filter(el => {\r\n      return !el.value.trim().length && el.type !== 'file';\r\n    });\r\n\r\n    const checkAndSubmit = (isImageAdded = false) => {\r\n      if (invalidInputsArray.length) {\r\n        errorMsg = 'All fields must be filled.';\r\n      } else if (!isAllowedImageExtension) {\r\n        errorMsg = 'Image should be in PNG format.';\r\n      } else if (!isAllowedImageSize) {\r\n        errorMsg = 'Allowed image dimensions: Minimum size: 750 x 784, Maximum size: 1500 x 1568.';\r\n      }\r\n  \r\n      if (!errorMsg) {\r\n        const newData = Object.assign({}, widgetData);\r\n        if (document.getElementById('image-input').classList.contains('js-image-removed')) {\r\n          newData.imageUrl = '';\r\n        }\r\n        document.querySelectorAll('[data-path]').forEach(el => {\r\n          const path = el.getAttribute('data-path');\r\n          const val = el.value;\r\n          setValueByNs(newData, path, val);\r\n        });\r\n        newData.iw_isNew = false;\r\n        setWidgetData(newData);\r\n        updateImg();\r\n        updateLocalStorage(newData);\r\n        handleCloseEditModal(!isImageAdded, false);\r\n      } else {\r\n        showErrorSnackbar(errorMsg);\r\n      }\r\n    }\r\n\r\n    const imageInputElement = document.getElementById('image-input');\r\n    let isAllowedImageExtension = true;\r\n    let isAllowedImageSize = true;\r\n    if (imageInputElement.value) {\r\n      isAllowedImageExtension = imageInputElement.value.endsWith('.png');\r\n\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(imageInputElement.files[0]);\r\n      img.onload = () => {\r\n        const minWidth = 750;\r\n        const minHeight = 784;\r\n        const maxWidth = 1500;\r\n        const maxHeight = 1568;\r\n        if (img.width < minWidth || img.width > maxWidth || img.height < minHeight || img.height > maxHeight) {\r\n          isAllowedImageSize = false;\r\n        }\r\n        checkAndSubmit(true);\r\n      }\r\n    } else {\r\n      checkAndSubmit();\r\n    }\r\n  }\r\n\r\n  const handleCopySubmit = () => {\r\n    window.carousels.get(targetEnv.toLowerCase()).addWidget(widgetData);\r\n    handleCloseCopyModal();\r\n  }\r\n\r\n  const handleDragStop = () => {\r\n    window.carousels.get(targetEnv.toLowerCase()).reorder();\r\n  }\r\n\r\n  const handleRemoveImage = () => {\r\n    const removeImage = () => {\r\n      const inputEl = document.getElementById('image-input');\r\n      inputEl.value = '';\r\n      inputEl.classList.add('js-image-removed');\r\n    }\r\n\r\n    ConfirmationPopup('Are you sure to remove the image?', removeImage);\r\n  }\r\n\r\n  const handleRemoveWidget = (isConfirmationNeeded = true) => {\r\n    const removeWidget = () => {\r\n      window.carousels.get(targetEnv.toLowerCase()).removeWidget(widgetData.iw_id);\r\n      handleCloseEditModal();\r\n    }\r\n\r\n    if (isConfirmationNeeded) {\r\n      ConfirmationPopup('Are you sure to delete this Widget?', removeWidget);\r\n    } else {\r\n      removeWidget();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Draggable\r\n      axis=\"x\"\r\n      handle=\".js-sortable .js-widget-item-container\"\r\n      defaultPosition={{x: 0, y: 0}}\r\n      position={{x: 0, y: 0}}\r\n      grid={[25, 25]}\r\n      scale={1}\r\n      onStop={handleDragStop}>\r\n      <Box className={`widget-item-wrapper ${isWidgetActiveByDate ? 'active-by-date' : ''}`}>\r\n        <Paper elevation={3} style={{backgroundImage: `url('${ImageStorage.get(widgetData.imageUrl)}')`}} className=\"widget-item-container js-widget-item-container\" id={'widget_' + props.id}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={styles.title}>\r\n            {widgetData.title[defaultLanguage]}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body2\" component=\"p\" style={styles.description}>\r\n            {widgetData.description[defaultLanguage]}\r\n          </Typography>\r\n          <Button size=\"small\" color=\"primary\" variant=\"contained\" target=\"_blank\" href={widgetData.button.url} style={styles.button}>\r\n            {widgetData.button.title[defaultLanguage]}\r\n          </Button>\r\n          <Button onClick={handleOpenCopyModal} size=\"small\" color=\"default\" variant=\"contained\" className=\"widget-item-controls-btn widget-item-copy-btn\">\r\n            {getTranslation('widget_controls_btn_copy')}\r\n          </Button>\r\n          <Button onClick={handleOpenEditModal} size=\"small\" color=\"default\" variant=\"contained\" className=\"widget-item-controls-btn widget-item-edit-btn\">\r\n            {getTranslation('widget_controls_btn_edit')}\r\n          </Button>\r\n          <Dialog\r\n            open={openEditModal}\r\n            onClose={handleCloseEditModal}\r\n            className=\"modal-handler\"\r\n          >\r\n            <div className=\"modal-container\">\r\n              <form autoComplete=\"off\">\r\n                <Grid container\r\n                  spacing={1}\r\n                  direction=\"column\"\r\n                  alignItems=\"center\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing} ${classes.topSpacing}`}\r\n                  >\r\n\r\n                  <Grid item style={styles.minWidth50} className={`${classes.bottomSpacing}`}>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Title\r\n                    </Typography>\r\n                    {createArrayOfInputs('title')}\r\n                  </Grid>\r\n\r\n                  <Grid item style={styles.minWidth50} className={`${classes.bottomSpacing}`}>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Description\r\n                    </Typography>\r\n                    {createArrayOfInputs('description')}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Image\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid container\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                    justify=\"space-around\"\r\n                    style={styles.blockWithTopSpacing}\r\n                  >\r\n                    <Grid item>\r\n                      <input type=\"file\" id=\"image-input\" className=\"input-file\"></input>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleRemoveImage}>\r\n                        Remove image\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                  \r\n                  <Grid item className={`${classes.bottomSpacing} ${classes.topSpacing}`}>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      More Button\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item style={styles.minWidth50}>\r\n                    <TextField\r\n                      id=\"btn-link-field\"\r\n                      label=\"Link for button\"\r\n                      defaultValue={widgetData.iw_isNew ? '' : widgetData.button.url}\r\n                      style={styles.width100}\r\n                      inputProps={{'data-path': 'button.url'}}\r\n                    />\r\n                    {createArrayOfInputs('button.title')}\r\n                  </Grid>\r\n\r\n                  <Grid item className={`${classes.bottomSpacing} ${classes.topSpacing}`}>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Audience\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item style={styles.minWidth50}>\r\n                    <FormControl style={styles.audienceInputContainer}>\r\n                      <Select\r\n                        id=\"audience-select\"\r\n                        value={audience}\r\n                        onChange={handleAudienceChange}\r\n                        inputProps={{'data-path': 'audience'}}\r\n                        >\r\n                        <MenuItem value='MOBILE'>MOBILE</MenuItem>\r\n                        <MenuItem value='BROADBAND'>BROADBAND</MenuItem>\r\n                        <MenuItem value='ALL'>ALL</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item className={`${classes.bottomSpacing} ${classes.topSpacing}`}>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Availability\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid container\r\n                    spacing={1}\r\n                    alignItems=\"flex-end\"\r\n                    justify=\"space-around\"\r\n                    className={`${classes.bottomSpacing}`}\r\n                  >\r\n                    <Grid item>\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant=\"inline\"\r\n                          format=\"MM/dd/yyyy\"\r\n                          margin=\"normal\"\r\n                          id=\"date-picker-from\"\r\n                          label=\"From (mm/dd/yyyy)\"\r\n                          value={selectedFromDate}\r\n                          onChange={handleFromDateChange}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                          inputProps={{'data-path': 'fromDate'}}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant=\"inline\"\r\n                          format=\"MM/dd/yyyy\"\r\n                          margin=\"normal\"\r\n                          id=\"date-picker-till\"\r\n                          label=\"Till (mm/dd/yyyy)\"\r\n                          value={selectedTillDate}\r\n                          onChange={handleTillDateChange}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                          inputProps={{'data-path': 'tillDate'}}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  { !widgetData.iw_isNew ? \r\n                    <Grid item>\r\n                      <Button variant=\"contained\" color=\"secondary\" component=\"span\" onClick={handleRemoveWidget} startIcon={<DeleteIcon />}>\r\n                        Remove Widget\r\n                      </Button>\r\n                    </Grid> : ''\r\n                  }\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleCloseEditModal}>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleEditSubmit} className=\"save-btn\">\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n              <Snackbar\r\n                open={!!errorSnackbar.length}\r\n                onClose={hideErrorSnackbar}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              >\r\n                <Alert onClose={hideErrorSnackbar} severity=\"error\">\r\n                  {errorSnackbar}\r\n                </Alert>\r\n              </Snackbar>\r\n            </div>\r\n          </Dialog>\r\n          <Dialog\r\n            open={openCopyModal}\r\n            onClose={handleCloseCopyModal}\r\n            className=\"modal-handler\"\r\n          >\r\n            <div className=\"modal-container\">\r\n              <form autoComplete=\"off\">\r\n                <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                  Select target environment\r\n                </Typography>\r\n                <FormControl className=\"copy-env-dropdown\">\r\n                  <Select\r\n                    id=\"target-env-select\"\r\n                    value={targetEnv}\r\n                    onChange={handleTargetEnvChange}\r\n                  >\r\n                    <MenuItem value='JIT'>JIT</MenuItem>\r\n                    <MenuItem value='UAT'>UAT</MenuItem>\r\n                    <MenuItem value='PROD'>PROD</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className=\"copy-btns-container\">\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleCloseCopyModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleCopySubmit}>\r\n                      COPY WIDGET\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Dialog>\r\n        </Paper>\r\n        <Box className=\"widget-item-bottom-block\">\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {widgetData.audience}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {format(new Date(widgetData.fromDate), 'dd/MM/yyyy') + ' - ' + format(new Date(widgetData.tillDate), 'dd/MM/yyyy')}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Draggable>\r\n  );\r\n}\r\n","//Transforms local time to Universal (without GMT)\r\nexport const getUTCDate = (date) => {\r\n  const dt = new Date(date);\r\n  return new Date(Date.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate()));\r\n}\r\n","import { getUTCDate } from './getUTCDate';\r\n\r\n\r\n//Converts 1548882000000 to '2019-01-30T21:00:00'\r\nexport const getDateConventionalString = milliseconds => {\r\n  const ms = Number(milliseconds);\r\n  const dt = getUTCDate(new Date(ms));\r\n  const resultString = dt.toISOString().split('.')[0];\r\n\r\n  return resultString;\r\n}\r\n","import request from 'request';\r\n\r\n\r\n//Sends requests one by one\r\nclass Requester {\r\n  constructor(tagData) {\r\n    this.queue = [];\r\n    this.interval = 2000;\r\n    this.timer = '';\r\n    this.tagData = tagData;\r\n  }\r\n\r\n  sendTag() {\r\n    const dataString = '{\"tag_name\": \"' + this.tagData.env + '-' + new Date().getTime() + '\"}';\r\n\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.tagData.repoName}/releases`,\r\n      method: 'POST',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.tagData.user,\r\n        'pass': this.tagData.token\r\n      }\r\n    };\r\n\r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        console.log(body);\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    request(options, callback);\r\n  }\r\n\r\n  sendRequest() {\r\n    if (this.queue.length) {\r\n      const dataObj = this.queue.shift();\r\n      const options = dataObj.opt;\r\n      const callback = dataObj.clb;\r\n      request(options, callback);\r\n    } else {\r\n      this.sendTag();\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  start() {\r\n    if (!this.timer) {\r\n      const that = this;\r\n      this.timer = setInterval(() => {\r\n        that.sendRequest();\r\n      }, this.interval);\r\n    }\r\n  }\r\n\r\n  addToQueue(options, callback) {\r\n    const obj = {'opt': options, 'clb': callback};\r\n    this.queue.push(obj);\r\n    this.start();\r\n  }\r\n}\r\n\r\nexport default Requester;\r\n","const translations = {\r\n  'EN': {\r\n    login_heading: 'Login with your GitHub credentials',\r\n    login_user_name: 'User Name',\r\n    login_token: 'Personal Access Token',\r\n    login_instructions_link: 'Read Me',\r\n    repos_heading: 'Pick Repository',\r\n    repos_btn: 'Start Editing',\r\n    carousel_heading: 'widgets',\r\n    carousel_main_controls_btn_reorder: 'Change order',\r\n    carousel_main_controls_btn_add: 'Add widget',\r\n    carousel_main_controls_btn_publish: 'Publish',\r\n    carousel_main_controls_btn_revert: 'Revert all changes',\r\n    widget_controls_btn_copy: 'Copy',\r\n    widget_controls_btn_edit: 'Edit'\r\n  }\r\n};\r\n\r\nexport default translations;\r\n","import translations from './../Data/translations';\r\n\r\nconst getTranslation = keyword => {\r\n  const lang = 'EN';\r\n  return translations[lang][keyword];\r\n}\r\n\r\nexport default getTranslation;\r\n","export const mockWidgetDataObj = {\r\n  \"title\": {},\r\n  \"description\": {},\r\n  \"fromDate\": \"2020-01-01T00:00:00\",\r\n  \"tillDate\": \"2021-01-01T00:00:00\",\r\n  \"audience\": \"ALL\",\r\n  \"imageUrl\": \"\",\r\n  \"button\": {\r\n    \"url\": \"\",\r\n    \"title\": {}\r\n  }\r\n};\r\n","import { mockWidgetDataObj } from './../Data/mockWidgetDataObj';\r\nimport { getLanguagesForCurrentCountry } from './getLanguagesForCurrentCountry';\r\n\r\n\r\nexport const getMockWidgetDataObj = () => {\r\n  const currentLanguages = getLanguagesForCurrentCountry();\r\n\r\n  currentLanguages.forEach(lang => {\r\n    mockWidgetDataObj.title[lang] = '';\r\n    mockWidgetDataObj.description[lang] = '';\r\n    mockWidgetDataObj.button.title[lang] = '';\r\n  });\r\n\r\n  mockWidgetDataObj.iw_isNew = true;\r\n\r\n  return mockWidgetDataObj;\r\n};\r\n","//returns 'by'\r\nexport const getCurrentCountry = () => {\r\n  const currentCountry = localStorage.getItem('instant-widgets-current-repo').split('capp-instantWidgets-')[1];\r\n  return currentCountry.toLowerCase();\r\n}\r\n","import React from 'react';\r\nimport request from 'request';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst styles = {\r\n  loginBtn: {\r\n    marginTop: '20px',\r\n    marginBottom: '25px'\r\n  }\r\n}\r\n\r\nexport const LoginDialog = props => {\r\n  const handleSubmit = () => {\r\n    const name = document.getElementById('name').value;\r\n    const pass = document.getElementById('pass').value;\r\n\r\n    const options = {\r\n      url: 'https://api.github.com/user/repos?per_page=1000',\r\n      auth: {\r\n        'user': name,\r\n        'pass': pass\r\n      }\r\n    };\r\n    \r\n    const callback = (error, response, body) => {\r\n      if (!error && response.statusCode === 200) {\r\n        const arrayOfAllRepos = JSON.parse(body);\r\n        const arrayOfRepos = arrayOfAllRepos.filter(repoObj => {\r\n          return repoObj.name.startsWith('capp-instantWidgets-');\r\n        });\r\n        const arrayOfRepoNames = arrayOfRepos.map(obj => {return obj.name});\r\n        props.setRepos(arrayOfRepoNames);\r\n        props.setCreds({login: name, personalAccessToken: pass});\r\n        props.setScreen('repos');\r\n      } else {\r\n        console.error('ERROR');\r\n        props.notify('Incorrect credentials', 'error');\r\n      }\r\n    }\r\n    \r\n    request(options, callback);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={true} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{getTranslation('login_heading')}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={getTranslation('login_user_name')}\r\n            type=\"text\"\r\n            fullWidth\r\n            autofill=\"true\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"pass\"\r\n            label={getTranslation('login_token')}\r\n            type=\"password\"\r\n            fullWidth\r\n            autofill=\"true\"\r\n          />\r\n          <DialogActions>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"space-around\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\" style={styles.loginBtn}>\r\n                Login\r\n              </Button>\r\n              <Link target=\"_blank\" href=\"https://github.com/instant-widgets-editor/instant-widgets-editor.github.io/blob/master/README.md#instant-widgets-editor\">\r\n                {getTranslation('login_instructions_link')}\r\n              </Link>\r\n            </Grid>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst styles = {\r\n  submitBtn: {\r\n    marginTop: '20px'\r\n  }\r\n};\r\n\r\n\r\nexport const ReposDialog = props => {\r\n  const arrayOfAllRepos = props.repos;\r\n  const [value, setValue] = React.useState(arrayOfAllRepos[0]);\r\n  \r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const currentRepoName = value;\r\n    localStorage.setItem('instant-widgets-current-repo', currentRepoName);\r\n    props.setCurrentRepo(currentRepoName);\r\n    props.setScreen('widgets');\r\n  };\r\n\r\n  const RadioList = ({arrOfRepos}) => (\r\n    <div>\r\n      {arrOfRepos.map((repoName, index) => (\r\n        <div key={index}><FormControlLabel value={repoName} control={<Radio />} label={repoName} /></div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={true} aria-labelledby=\"form-repos-dialog-title\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <DialogTitle id=\"form-repos-dialog-title\">{getTranslation('repos_heading')}</DialogTitle>\r\n        </Grid>\r\n        <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"repos\" name=\"repos1\" value={value} onChange={handleChange}>\r\n            <RadioList arrOfRepos={arrayOfAllRepos} />\r\n          </RadioGroup>\r\n        </FormControl>\r\n          <DialogActions>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"space-around\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\" style={styles.submitBtn}>\r\n                {getTranslation('repos_btn')}\r\n              </Button>\r\n            </Grid>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Carousel from './../Carousel';\r\n\r\n\r\nexport const Widgets = props => {\r\n  const data = {\r\n    creds: props.creds,\r\n    currentRepo: props.currentRepo,\r\n    notify: props.notify\r\n  };\r\n  return (\r\n    <div>\r\n      <Carousel env=\"PROD\" {...data} />\r\n      <Carousel env=\"UAT\" {...data} />\r\n      <Carousel env=\"JIT\" {...data} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './UI.css';\r\nimport { LoginDialog } from '../LoginDialog';\r\nimport { ReposDialog } from '../ReposDialog';\r\nimport { Widgets } from '../Widgets';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\nfunction Screen() {\r\n  const [screen, setScreen] = React.useState('');\r\n\r\n  const [creds, setCreds] = React.useState({login: '', personalAccessToken: ''});\r\n  const [repos, setRepos] = React.useState([]);\r\n  const [currentRepo, setCurrentRepo] = React.useState('');\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const notify = (text, type = 'default') => {\r\n    //type ought to be 'success', 'error', 'warning', 'info', or 'default'\r\n    enqueueSnackbar(text, { variant: type });\r\n  };\r\n\r\n  const renderScreen = name => {\r\n    if (name === 'repos') {\r\n      return <ReposDialog\r\n        setScreen={newScreenName => setScreen(newScreenName)}\r\n        repos={repos}\r\n        setCurrentRepo={newCurrentRepoName => setCurrentRepo(newCurrentRepoName)}\r\n      />;\r\n    } else if (name === 'widgets') {\r\n      return <Widgets\r\n        creds={creds}\r\n        currentRepo={currentRepo}\r\n        notify={notify}\r\n      />\r\n    } else {\r\n      return <LoginDialog\r\n        setScreen={newScreenName => setScreen(newScreenName)}\r\n        setCreds={newCreds => setCreds(newCreds)}\r\n        setRepos={newRepos => setRepos(newRepos)}\r\n        notify={notify}\r\n      />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {renderScreen(screen)}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction UI() {\r\n  return (\r\n    <div className=\"UI\">\r\n      <SnackbarProvider maxSnack={3}>\r\n        <Screen />\r\n      </SnackbarProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport UI from './Components/UI';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-Container\">\r\n      <UI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const ImageStorage = {\r\n  get: imageName => {\r\n    const base64 = sessionStorage.getItem(imageName) || '';\r\n    return imageName ? base64 : '';\r\n  },\r\n  set: (imageName, base64) => {\r\n    sessionStorage.setItem(imageName, base64);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './index.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nexport const ConfirmationPopup = (text, callback) => {\r\n  const UI = ({ onClose }) => {\r\n\r\n    const handleConfirm = () => {\r\n      callback();\r\n      onClose();\r\n    }\r\n\r\n    return (\r\n      <Box className=\"confirmation-popup\">\r\n        <Dialog\r\n          open={true}\r\n          onClose={onClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirm} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const options = {\r\n    customUI: UI,\r\n    childrenElement: () => <div />,\r\n    closeOnEscape: true,\r\n    closeOnClickOutside: true,\r\n    willUnmount: () => {},\r\n    afterClose: () => {},\r\n    onClickOutside: () => {},\r\n    onKeypressEscape: () => {}\r\n  };\r\n\r\n  confirmAlert(options);\r\n}\r\n"],"sourceRoot":""}