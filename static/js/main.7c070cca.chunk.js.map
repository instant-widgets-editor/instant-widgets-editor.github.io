{"version":3,"sources":["Data/countriesAndLanguages.js","Utils/getLanguagesForCurrentCountry.js","Components/Carousel/index.js","Utils/getValueByNs.js","Utils/setValueByNs.js","Components/WidgetItem/index.js","Utils/getUTCDate.js","Utils/getDateConventionalString.js","Utils/Requester.js","Data/mockWidgetDataObj.js","Data/translations.js","Utils/getTranslation.js","Utils/getCurrentCountry.js","Components/LoginDialog/index.js","Components/ReposDialog/index.js","Components/Widgets/index.js","Components/UI/index.js","App.js","serviceWorker.js","index.js","Components/ConfirmationPopup/index.js"],"names":["countriesAndLanguages","AT","BY","CH","GB","IE","NL","PL","getLanguagesForCurrentCountry","getCurrentCountry","toUpperCase","beautify","require","Carousel","props","state","arrayOfItems","isSortable","isChanged","creds","localStorage","getItem","user","split","token","repoName","JSON","parse","name","sha","requester","Requester","env","window","carousels","Map","set","toLowerCase","that","this","options","url","auth","request","error","response","body","statusCode","console","responseBody","path","download_url","fetchDataForItems","pathToData","arrayOfItemsData","drawItems","setInterval","areChangesMade","setState","isOldStorageNotToBeFilled","arrayOfWidgetComponents","arrayOfDataObjects","saveAndRender","setItem","stringify","forEach","itemDataObj","push","key","shortid","generate","data","id","iw_id","addToQueue","dataObj","length","sort","a","b","Number","iw_index","index","imageUrl","iw_fullImg","undefined","fileName","dataString","method","log","notify","content","ConfirmationPopup","modifiedArrayOfDataObjects","map","startsWith","sendImage","Object","keys","fromDate","getDateConventionalString","Date","getTime","tillDate","sendJSON","Buffer","from","toString","widgetDataObj","storageKey","arrayOfWidgetsDataObjects","arrayOfIDsAndPositions","widgetItem","obj","pos","document","getElementById","getBoundingClientRect","x","arrayOfOrderedComponents","reactComponent","sortedArrayOfWidgetsDataObjects","widgetID","updatedArray","filter","conditionalBlock","variant","className","onClick","handlePublish","bind","getTranslation","handleRevert","component","gutterBottom","handleOrderToggle","addWidget","getMockWidgetDataObj","Component","getValueByNs","defaultValue","setValueByNs","value","slice","Alert","elevation","styles","title","color","description","marginTop","marginBottom","button","borderRadius","backgroundColor","errorPrompt","position","top","left","zIndex","audienceInputContainer","minWidth","useStyles","makeStyles","bottomSpacing","WidgetItem","classes","initialData","React","useState","widgetData","setWidgetData","defaultLanguage","createArrayOfInputs","arr","maxNumberOfCharacters","includes","langName","Grid","container","spacing","alignItems","item","TextField","inputProps","maxLength","handleCtrlEnter","e","keyCode","ctrlKey","handleEditSubmit","openEditModal","setOpenEditModal","handleCloseEditModal","isNeedToRerender","removeEventListener","get","targetEnv","rerender","openCopyModal","setOpenCopyModal","handleCloseCopyModal","audience","setAudience","setTargetEnv","selectedFromDate","setSelectedFromDate","selectedTillDate","setSelectedTillDate","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","updateImg","files","newData","assign","updateLocalStorage","newDataObj","restItems","errorSnackbar","setErrorSnackbar","showErrorSnackbar","msg","hideErrorSnackbar","errorMsg","invalidInputsArray","Array","querySelectorAll","el","trim","type","checkAndSubmit","isImageAdded","isAllowedImageExtension","isAllowedImageSize","classList","contains","getAttribute","val","imageInputElement","endsWith","img","Image","src","URL","createObjectURL","width","height","axis","handle","defaultPosition","y","grid","scale","onStop","reorder","Box","Paper","style","backgroundImage","Typography","Button","size","target","href","addEventListener","Modal","open","onClose","autoComplete","justify","inputEl","add","label","FormControl","Select","onChange","event","MenuItem","utils","DateFnsUtils","disableToolbar","format","margin","date","KeyboardButtonProps","removeWidget","startIcon","Snackbar","autoHideDuration","severity","milliseconds","ms","dt","UTC","getFullYear","getMonth","getDate","getUTCDate","toISOString","tagData","queue","interval","timer","shift","opt","callback","clb","sendTag","clearInterval","sendRequest","start","mockWidgetDataObj","lang","translations","login_heading","login_user_name","login_token","login_instructions_link","repos_heading","repos_btn","carousel_heading","carousel_main_controls_btn_reorder","carousel_main_controls_btn_add","carousel_main_controls_btn_publish","carousel_main_controls_btn_revert","widget_controls_btn_copy","widget_controls_btn_edit","keyword","LoginDialog","Dialog","aria-labelledby","DialogTitle","DialogContent","autoFocus","fullWidth","DialogActions","arrayOfRepos","repoObj","setScreen","location","Link","ReposDialog","arrayOfAllRepos","setValue","RadioList","arrOfRepos","FormControlLabel","control","Radio","RadioGroup","aria-label","currentRepoObj","Widgets","Screen","currentScreen","String","URLSearchParams","search","screen","enqueueSnackbar","useSnackbar","text","Fragment","newScreenName","UI","maxSnack","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","customUI","aria-describedby","childrenElement","closeOnEscape","closeOnClickOutside","willUnmount","afterClose","onClickOutside","onKeypressEscape","confirmAlert"],"mappings":"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","file":"static/js/main.7c070cca.chunk.js","sourcesContent":["export const countriesAndLanguages = {\r\n  AT: ['de'],\r\n  BY: ['be', 'ru'],\r\n  CH: ['de', 'en', 'fr', 'it'],\r\n  GB: ['en'],\r\n  IE: ['en'],\r\n  NL: ['nl'],\r\n  PL: ['pl']\r\n};\r\n","import { getCurrentCountry } from './getCurrentCountry';\r\nimport { countriesAndLanguages } from './../Data/countriesAndLanguages';\r\n\r\n\r\nexport const getLanguagesForCurrentCountry = () => {\r\n  return countriesAndLanguages[getCurrentCountry().toUpperCase()];\r\n}\r\n","import React, {Component} from 'react';\r\nimport './index.css';\r\nimport request from 'request';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport WidgetItem from './../WidgetItem';\r\nimport shortid from 'shortid';\r\nimport Requester from './../../Utils/Requester';\r\nimport { getDateConventionalString } from './../../Utils/getDateConventionalString';\r\nimport { getMockWidgetDataObj } from './../../Data/mockWidgetDataObj';\r\nimport { getCurrentCountry } from './../../Utils/getCurrentCountry';\r\nimport { ConfirmationPopup } from './../ConfirmationPopup';\r\nconst beautify = require('json-beautify');\r\n\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {arrayOfItems: [], isSortable: false, isChanged: false};\r\n    this.creds = localStorage.getItem('instant-widgets-creds');\r\n    this.user = this.creds.split(':')[0];\r\n    this.token = this.creds.split(':')[1];\r\n    this.repoName = JSON.parse(localStorage.getItem('instant-widgets-current-repo'))[0].name;\r\n    this.sha = '';\r\n    this.requester = new Requester({\r\n      env: props.env,\r\n      user: this.user,\r\n      token: this.token,\r\n      repoName: this.repoName\r\n    });\r\n\r\n    if (!window.carousels) {\r\n      window.carousels = new Map();\r\n    }\r\n    window.carousels.set(props.env.toLowerCase(), this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const that = this;\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/${this.props.env.toUpperCase()}.json`,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n    \r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        const responseBody = JSON.parse(body);\r\n        const path = responseBody.download_url;\r\n        that.sha = responseBody.sha;\r\n        fetchDataForItems(path);\r\n      } else {\r\n        console.error('ERROR');\r\n      }\r\n    }\r\n    \r\n    request(options, callback);\r\n\r\n    const fetchDataForItems = (pathToData) => {\r\n      const options = {\r\n        url: pathToData\r\n      };\r\n      \r\n      function callback(error, response, body) {\r\n        if (!error && response.statusCode === 200) {\r\n          const arrayOfItemsData = JSON.parse(body);\r\n          that.drawItems(arrayOfItemsData);\r\n        } else {\r\n          console.error('ERROR');\r\n        }\r\n      }\r\n      \r\n      request(options, callback);\r\n    }\r\n\r\n    window.setInterval(() => {\r\n      const oldVal = localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-old');\r\n      const newVal = localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-new');\r\n      const areChangesMade = oldVal !== newVal;\r\n      this.setState({\r\n        arrayOfItems: this.state.arrayOfItems,\r\n        isSortable: this.state.isSortable,\r\n        isChanged: areChangesMade\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  drawItems(arrayOfItemsData, isOldStorageNotToBeFilled = false) {\r\n    const arrayOfWidgetComponents = [];\r\n    let arrayOfDataObjects = [];\r\n    const that = this;\r\n\r\n    const saveAndRender = () => {\r\n      localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-new', JSON.stringify(arrayOfDataObjects));\r\n      if (!isOldStorageNotToBeFilled) {\r\n        localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + that.props.env + '-old', JSON.stringify(arrayOfDataObjects));\r\n      }\r\n      arrayOfDataObjects.forEach(itemDataObj => {\r\n        arrayOfWidgetComponents.push(<WidgetItem key={shortid.generate()} data={itemDataObj} env={that.props.env} id={itemDataObj.iw_id}/>);\r\n      });\r\n      that.setState({\r\n        arrayOfItems: arrayOfWidgetComponents,\r\n        isSortable: that.state.isSortable,\r\n        isChanged: that.state.isChanged\r\n      });\r\n    };\r\n\r\n    const addToQueue = (dataObj) => {\r\n      arrayOfDataObjects.push(dataObj);\r\n      if (arrayOfDataObjects.length === arrayOfItemsData.length) {\r\n        //Sort Widgets by iw_index in ascending order\r\n        arrayOfDataObjects = arrayOfDataObjects.sort((a, b) => (Number(a.iw_index) > Number(b.iw_index)) ? 1 : ((Number(b.iw_index) > Number(a.iw_index)) ? -1 : 0));\r\n        saveAndRender();\r\n      }\r\n    }\r\n\r\n    if (!arrayOfItemsData.length) {\r\n      //Render empty carousel\r\n      saveAndRender();\r\n    }\r\n\r\n    arrayOfItemsData.forEach((itemDataObj, index) => {\r\n      itemDataObj.iw_id = shortid.generate();\r\n\r\n      if (!itemDataObj.iw_index) {\r\n        itemDataObj.iw_index = index;\r\n      }\r\n\r\n      if (!itemDataObj.imageUrl) {\r\n        itemDataObj.iw_fullImg = '';\r\n      }\r\n\r\n      if (itemDataObj.imageUrl && itemDataObj.iw_fullImg === undefined) {\r\n        const options = {\r\n          url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/images/${this.props.env.toUpperCase()}/${itemDataObj.imageUrl}`,\r\n          auth: {\r\n            'user': this.user,\r\n            'pass': this.token\r\n          }\r\n        };\r\n        \r\n        function callback(error, response, body) {\r\n          if (!error && response.statusCode === 200) {\r\n            const path = JSON.parse(body).download_url;\r\n            itemDataObj.iw_fullImg = path;\r\n            addToQueue(itemDataObj);\r\n          } else {\r\n            console.error('ERROR');\r\n            itemDataObj.iw_fullImg = '';\r\n            addToQueue(itemDataObj);\r\n          }\r\n        }\r\n        \r\n        request(options, callback);\r\n      } else {\r\n        addToQueue(itemDataObj);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendImage(fileName, data) {\r\n    const dataString = '{\"message\": \"Upload image\", \"content\": \"' + data + '\" }';\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/images/${this.props.env.toUpperCase()}/${fileName}`,\r\n      method: 'PUT',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n\r\n    const callback = (error, response, body) => {\r\n      console.log(JSON.parse(body));\r\n      if (!error) {\r\n        console.log(JSON.parse(body));\r\n        this.props.notify('Image was sent to Github', 'success');\r\n      } else {\r\n        console.error(error);\r\n        this.props.notify(error, 'error');\r\n      }\r\n    }\r\n\r\n    this.requester.addToQueue(options, callback);\r\n  }\r\n\r\n  sendJSON(data) {\r\n    const dataString = '{\"message\": \"Update JSON\", \"content\": \"' + data + '\", \"sha\": \"' + this.sha + '\" }';\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.repoName}/contents/${this.props.env.toUpperCase()}.json`,\r\n      method: 'PUT',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.user,\r\n        'pass': this.token\r\n      }\r\n    };\r\n\r\n    const callback = (error, response, body) => {\r\n      //console.log(JSON.parse(body));\r\n      if (!error && response.statusCode === 200) {\r\n        this.sha = JSON.parse(body).content.sha;\r\n        this.props.notify('JSON was sent to Github', 'success');\r\n      } else {\r\n        console.error(error);\r\n        this.props.notify(error, 'error');\r\n      }\r\n    }\r\n    \r\n    this.requester.addToQueue(options, callback);\r\n  }\r\n\r\n  handleRevert() {\r\n    const revert = () => {\r\n      this.drawItems(JSON.parse(localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-old')));\r\n    }\r\n\r\n    ConfirmationPopup('Are you sure to revert all changes?', revert);\r\n  }\r\n\r\n  handlePublish() {\r\n    const publish = () => {\r\n      const arrayOfDataObjects = JSON.parse(localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new'));\r\n      localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-old', JSON.stringify(arrayOfDataObjects));\r\n  \r\n      const modifiedArrayOfDataObjects = arrayOfDataObjects.map(dataObj => {\r\n        if (dataObj.iw_fullImg.startsWith('data:image')) {\r\n          this.sendImage(dataObj.imageUrl, dataObj.iw_fullImg.split('data:image/png;base64,')[1]);\r\n        }\r\n        \r\n        Object.keys(dataObj).forEach(key => {\r\n          if (key.startsWith('iw_')) {\r\n            delete dataObj[key];\r\n          }\r\n        });\r\n  \r\n        //Convert dates to conventional string\r\n        dataObj.fromDate = getDateConventionalString(new Date(dataObj.fromDate).getTime());\r\n        dataObj.tillDate = getDateConventionalString(new Date(dataObj.tillDate).getTime());\r\n  \r\n        return dataObj;\r\n      });\r\n  \r\n      this.sendJSON(Buffer.from(beautify(modifiedArrayOfDataObjects, null, 2), 'ascii').toString('base64'));\r\n    }\r\n\r\n    ConfirmationPopup('Are you sure to publish?', publish);\r\n  }\r\n\r\n  addWidget(widgetDataObj) {\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    widgetDataObj.iw_index = arrayOfWidgetsDataObjects.length;\r\n    arrayOfWidgetsDataObjects.push(widgetDataObj);\r\n    localStorage.setItem(storageKey, JSON.stringify(arrayOfWidgetsDataObjects));\r\n    this.drawItems(arrayOfWidgetsDataObjects, true);\r\n  }\r\n\r\n  reorder() {\r\n    const arrayOfIDsAndPositions = [];\r\n    this.state.arrayOfItems.forEach(widgetItem => {\r\n      const obj = {};\r\n      obj.id = widgetItem.props.id;\r\n      obj.pos = document.getElementById(`widget_${obj.id}`).getBoundingClientRect().x;\r\n      arrayOfIDsAndPositions.push(obj);\r\n    });\r\n    arrayOfIDsAndPositions.sort((a,b) => {return a.pos - b.pos});\r\n    const arrayOfOrderedComponents = [];\r\n    arrayOfIDsAndPositions.forEach((obj, index) => {\r\n      this.state.arrayOfItems.forEach(reactComponent => {\r\n        if (obj.id === reactComponent.props.id) {\r\n          const widgetDataObj = reactComponent.props.data;\r\n          widgetDataObj.iw_index = index;\r\n          arrayOfOrderedComponents.push(<WidgetItem key={shortid.generate()} data={widgetDataObj} env={this.props.env} id={widgetDataObj.iw_id}/>);\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      arrayOfItems: arrayOfOrderedComponents,\r\n      isSortable: this.state.isSortable,\r\n      isChanged: this.state.isChanged\r\n    });\r\n\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    const sortedArrayOfWidgetsDataObjects = [];\r\n    arrayOfIDsAndPositions.forEach(obj => {\r\n      arrayOfWidgetsDataObjects.forEach(widgetDataObj => {\r\n        if (obj.id === widgetDataObj.iw_id) {\r\n          sortedArrayOfWidgetsDataObjects.push(widgetDataObj);\r\n        }\r\n      });\r\n    });\r\n    localStorage.setItem(storageKey, JSON.stringify(sortedArrayOfWidgetsDataObjects));\r\n  }\r\n\r\n  handleOrderToggle() {\r\n    this.setState({\r\n      arrayOfItems: this.state.arrayOfItems,\r\n      isSortable: !this.state.isSortable,\r\n      isChanged: this.state.isChanged\r\n    });\r\n  }\r\n\r\n  removeWidget(widgetID) {\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    const updatedArray = arrayOfWidgetsDataObjects.filter((obj) => {\r\n      return obj.iw_id !== widgetID;\r\n    });\r\n    localStorage.setItem(storageKey, JSON.stringify(updatedArray));\r\n    this.drawItems(updatedArray, true);\r\n  }\r\n\r\n  rerender() {\r\n    const storageKey = 'instant-widgets-storage-' + getCurrentCountry() + '-' + this.props.env + '-new';\r\n    const arrayOfWidgetsDataObjects = JSON.parse(localStorage.getItem(storageKey));\r\n    this.drawItems(arrayOfWidgetsDataObjects, true);\r\n  }\r\n\r\n  render() {\r\n    const conditionalBlock = <Box>\r\n      <Button variant=\"contained\" className='btn btn-success' onClick={this.handlePublish.bind(this)}>\r\n        {getTranslation('carousel_main_controls_btn_publish')}\r\n      </Button>\r\n      <Button variant=\"contained\" className='btn btn-alert' onClick={this.handleRevert.bind(this)}>\r\n        {getTranslation('carousel_main_controls_btn_revert')}\r\n      </Button>\r\n    </Box>\r\n\r\n    return (\r\n      <div className={`carousel-container ${this.state.isSortable ? 'sortable js-sortable' : ''}`}>\r\n        <div className=\"carousel-main-controls-container\">\r\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n            {`${this.props.env.toUpperCase()} ${getTranslation('carousel_heading')}`} \r\n          </Typography>\r\n          <Button variant=\"contained\" className={`btn btn-neutral ${this.state.isSortable ? 'toggled' : ''}`} onClick={this.handleOrderToggle.bind(this)}>\r\n            {getTranslation('carousel_main_controls_btn_reorder')}\r\n          </Button>\r\n          <Button variant=\"contained\" className='btn btn-neutral' onClick={this.addWidget.bind(this, getMockWidgetDataObj())}>\r\n            {getTranslation('carousel_main_controls_btn_add')}\r\n          </Button>\r\n          {\r\n            this.state.isChanged ? conditionalBlock : ''\r\n          }\r\n        </div>\r\n        <div className=\"carousel-items-container\">\r\n          {this.state.arrayOfItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","/**\r\n * @function getValueByNs\r\n * @param {*} obj\r\n * @param {string} path\r\n * @param {*} defaultValue\r\n * @return {*}\r\n * @description return value from object by string path or default value\r\n * Examples:\r\n *  obj = [1,2,3]; getValueByNs(obj, 'length', 0) will return 3\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, 'length') will return ''\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, 'length', 0) will return 0\r\n *  obj = {0: 'a', 1: 'b', 2: 'c'}; getValueByNs(obj, '1') will return 'b'\r\n *  obj = {0: 'a', 'x': {'a':5}, 2: 'c'}; getValueByNs(obj, 'x.a', 0) will return 5\r\n */\r\nconst getValueByNs = (obj, path, defaultValue = '') => {\r\n  const keys = path.split('.');\r\n  keys.forEach(key => {\r\n    if (obj) {\r\n      obj = obj[key];\r\n    }\r\n  });\r\n\r\n  return obj || defaultValue;\r\n}\r\n\r\nexport default getValueByNs;\r\n","/**\r\n * @function setValueByNs\r\n * @param {*} obj\r\n * @param {string} path\r\n * @param {*} value\r\n * @return {*}\r\n * @description https://stackoverflow.com/questions/6393943/convert-javascript-string-in-dot-notation-into-an-object-reference\r\n * Example:\r\n *  setValueByNs(obj, 'a.b.etc', 123) //returns 123 and assigns obj.a.b.etc to 123\r\n */\r\nconst setValueByNs = (obj, path, value) => {\r\n  if (typeof path == 'string')\r\n    return setValueByNs(obj, path.split('.'), value);\r\n  else if (path.length === 1 && value !== undefined)\r\n    return obj[path[0]] = value;\r\n  else if (path.length === 0)\r\n    return obj;\r\n  else\r\n    return setValueByNs(obj[path[0]], path.slice(1), value);\r\n}\r\n\r\nexport default setValueByNs;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport getTranslation from './../../Utils/getTranslation';\r\nimport { getLanguagesForCurrentCountry } from './../../Utils/getLanguagesForCurrentCountry';\r\nimport getValueByNs from './../../Utils/getValueByNs';\r\nimport setValueByNs from './../../Utils/setValueByNs';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\nimport shortid from 'shortid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { getCurrentCountry } from './../../Utils/getCurrentCountry';\r\nimport { ConfirmationPopup } from './../ConfirmationPopup';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst styles = {\r\n  title: {\r\n    color: 'white'\r\n  },\r\n  description: {\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n    color: 'white'\r\n  },\r\n  button: {\r\n    borderRadius: '20px',\r\n    backgroundColor: 'white',\r\n    color: 'black'\r\n  },\r\n  errorPrompt: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1301\r\n  },\r\n  audienceInputContainer: {\r\n    minWidth: '160px',\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  bottomSpacing: {\r\n    marginBottom: '30px',\r\n  },\r\n});\r\n\r\nexport default function WidgetItem(props) {\r\n  const classes = useStyles(props);\r\n\r\n  const initialData = props.data;\r\n  const [widgetData, setWidgetData] = React.useState(initialData);\r\n  const defaultLanguage = getLanguagesForCurrentCountry()[0];\r\n\r\n  const createArrayOfInputs = path => {\r\n    const arr = [];\r\n    const key = path.split('.')[0];\r\n    const obj = getValueByNs(widgetData, path);\r\n    const maxNumberOfCharacters = path.includes('description') ? 120 : 22;\r\n    Object.keys(obj).forEach(langName => {\r\n      arr.push(\r\n        <Grid container spacing={1} alignItems=\"flex-end\" key={key + '-key-' + langName}>\r\n          <Grid item>\r\n            {langName.toUpperCase()}\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id={key + '-field-' + langName}\r\n              defaultValue={obj[langName]}\r\n              inputProps={{\r\n                'data-path': path + '.' + langName,\r\n                maxLength: maxNumberOfCharacters\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    return arr;\r\n  }\r\n\r\n  const handleCtrlEnter = (e) => {\r\n    if (e.keyCode===13 && e.ctrlKey) {\r\n      handleEditSubmit();\r\n    }\r\n  }\r\n\r\n  const [openEditModal, setOpenEditModal] = React.useState(false);\r\n  const handleOpenEditModal = () => {\r\n    setOpenEditModal(true);\r\n    document.addEventListener('keydown', handleCtrlEnter);\r\n  };\r\n  const handleCloseEditModal = (isNeedToRerender = true) => {\r\n    setOpenEditModal(false);\r\n    document.removeEventListener('keydown', handleCtrlEnter);\r\n    if (isNeedToRerender) {\r\n      window.carousels.get(targetEnv.toLowerCase()).rerender();\r\n    }\r\n  };\r\n\r\n  const [openCopyModal, setOpenCopyModal] = React.useState(false);\r\n  const handleOpenCopyModal = () => {\r\n    setOpenCopyModal(true);\r\n  };\r\n  const handleCloseCopyModal = () => {\r\n    setOpenCopyModal(false);\r\n  };\r\n\r\n  const [audience, setAudience] = React.useState(widgetData.audience);\r\n  const handleAudienceChange = (event) => {\r\n    setAudience(event.target.value);\r\n  };\r\n\r\n  const [targetEnv, setTargetEnv] = React.useState(props.env.toUpperCase());\r\n  const handleTargetEnvChange = (event) => {\r\n    setTargetEnv(event.target.value);\r\n  };\r\n\r\n  const [selectedFromDate, setSelectedFromDate] = React.useState(new Date(widgetData.fromDate));\r\n  const handleFromDateChange = (date) => {\r\n    setSelectedFromDate(date);\r\n  };\r\n  const [selectedTillDate, setSelectedTillDate] = React.useState(new Date(widgetData.tillDate));\r\n  const handleTillDateChange = (date) => {\r\n    setSelectedTillDate(date);\r\n  };\r\n\r\n  const toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n\r\n  async function updateImg() {\r\n    const file = document.getElementById('image-input').files[0];\r\n    if (file) {\r\n      const newData = Object.assign({}, widgetData);\r\n      newData.iw_fullImg = await toBase64(file);\r\n      newData.imageUrl = shortid.generate() + '.png';\r\n      setWidgetData(newData);\r\n      updateLocalStorage(newData);\r\n      window.carousels.get(targetEnv.toLowerCase()).rerender();\r\n    }\r\n  }\r\n\r\n  const updateLocalStorage = newDataObj => {\r\n    const allItems = JSON.parse(localStorage.getItem('instant-widgets-storage-' + getCurrentCountry() + '-' + props.env + '-new'));\r\n    const restItems = allItems.filter(obj => {\r\n      return obj.iw_id !== newDataObj.iw_id;\r\n    });\r\n    localStorage.setItem('instant-widgets-storage-' + getCurrentCountry() + '-' + props.env + '-new', JSON.stringify([newDataObj, ...restItems]));\r\n  }\r\n\r\n  const [errorSnackbar, setErrorSnackbar] = React.useState('');\r\n  const showErrorSnackbar = (msg) => {\r\n    setErrorSnackbar(msg);\r\n  };\r\n  const hideErrorSnackbar = () => {\r\n    setErrorSnackbar('');\r\n  }\r\n\r\n  const handleEditSubmit = () => {\r\n    let errorMsg = '';\r\n\r\n    const allInputsArray = Array.from(document.querySelectorAll('input'));\r\n    const invalidInputsArray = allInputsArray.filter(el => {\r\n      return !el.value.trim().length && el.type !== 'file';\r\n    });\r\n\r\n    const checkAndSubmit = (isImageAdded = false) => {\r\n      if (invalidInputsArray.length) {\r\n        errorMsg = 'All fields must be filled.';\r\n      } else if (!isAllowedImageExtension) {\r\n        errorMsg = 'Image should be in PNG format.';\r\n      } else if (!isAllowedImageSize) {\r\n        errorMsg = 'Allowed image dimensions: Minimum size: 750 x 784, Maximum size: 1500 x 1568.';\r\n      }\r\n  \r\n      if (!errorMsg) {\r\n        const newData = Object.assign({}, widgetData);\r\n        if (document.getElementById('image-input').classList.contains('js-image-removed')) {\r\n          newData.imageUrl = '';\r\n          newData.iw_fullImg = '';\r\n        }\r\n        document.querySelectorAll('[data-path]').forEach(el => {\r\n          const path = el.getAttribute('data-path');\r\n          const val = el.value;\r\n          setValueByNs(newData, path, val);\r\n        });\r\n        setWidgetData(newData);\r\n        updateImg();\r\n        updateLocalStorage(newData);\r\n        handleCloseEditModal(!isImageAdded);\r\n      } else {\r\n        showErrorSnackbar(errorMsg);\r\n      }\r\n    }\r\n\r\n    const imageInputElement = document.getElementById('image-input');\r\n    let isAllowedImageExtension = true;\r\n    let isAllowedImageSize = true;\r\n    if (imageInputElement.value) {\r\n      isAllowedImageExtension = imageInputElement.value.endsWith('.png');\r\n\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(imageInputElement.files[0]);\r\n      img.onload = () => {\r\n        const minWidth = 750;\r\n        const minHeight = 784;\r\n        const maxWidth = 1500;\r\n        const maxHeight = 1568;\r\n        if (img.width < minWidth || img.width > maxWidth || img.height < minHeight || img.height > maxHeight) {\r\n          isAllowedImageSize = false;\r\n        }\r\n        checkAndSubmit(true);\r\n      }\r\n    } else {\r\n      checkAndSubmit();\r\n    }\r\n  }\r\n\r\n  const handleCopySubmit = () => {\r\n    window.carousels.get(targetEnv.toLowerCase()).addWidget(widgetData);\r\n    handleCloseCopyModal();\r\n  }\r\n\r\n  const handleDragStop = () => {\r\n    window.carousels.get(targetEnv.toLowerCase()).reorder();\r\n  }\r\n\r\n  const handleRemoveImage = () => {\r\n    const removeImage = () => {\r\n      const inputEl = document.getElementById('image-input');\r\n      inputEl.value = '';\r\n      inputEl.classList.add('js-image-removed');\r\n    }\r\n\r\n    ConfirmationPopup('Are you sure to remove the image?', removeImage);\r\n  }\r\n\r\n  const handleRemoveWidget = () => {\r\n    const removeWidget = () => {\r\n      window.carousels.get(targetEnv.toLowerCase()).removeWidget(widgetData.iw_id);\r\n      handleCloseEditModal();\r\n    }\r\n\r\n    ConfirmationPopup('Are you sure to delete this Widget?', removeWidget);\r\n  }\r\n\r\n  return (\r\n    <Draggable\r\n      axis=\"x\"\r\n      handle=\".js-sortable .js-widget-item-container\"\r\n      defaultPosition={{x: 0, y: 0}}\r\n      position={{x: 0, y: 0}}\r\n      grid={[25, 25]}\r\n      scale={1}\r\n      onStop={handleDragStop}>\r\n      <Box className=\"widget-item-wrapper\">\r\n        <Paper elevation={3} style={{backgroundImage: `url('${widgetData.iw_fullImg ? widgetData.iw_fullImg : '' }')`}} className=\"widget-item-container js-widget-item-container\" id={'widget_' + props.id}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={styles.title}>\r\n            {widgetData.title[defaultLanguage]}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body2\" component=\"p\" style={styles.description}>\r\n            {widgetData.description[defaultLanguage]}\r\n          </Typography>\r\n          <Button size=\"small\" color=\"primary\" variant=\"contained\" target=\"_blank\" href={widgetData.button.url} style={styles.button}>\r\n            {widgetData.button.title[defaultLanguage]}\r\n          </Button>\r\n          <Button onClick={handleOpenCopyModal} size=\"small\" color=\"default\" variant=\"contained\" className=\"widget-item-controls-btn widget-item-copy-btn\">\r\n            {getTranslation('widget_controls_btn_copy')}\r\n          </Button>\r\n          <Button onClick={handleOpenEditModal} size=\"small\" color=\"default\" variant=\"contained\" className=\"widget-item-controls-btn widget-item-edit-btn\">\r\n            {getTranslation('widget_controls_btn_edit')}\r\n          </Button>\r\n          <Modal\r\n            open={openEditModal}\r\n            onClose={handleCloseEditModal}\r\n            className=\"modal-handler\"\r\n          >\r\n            <div className=\"modal-container\">\r\n              <form autoComplete=\"off\">\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Title\r\n                    </Typography>\r\n                    {createArrayOfInputs('title')}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Description\r\n                    </Typography>\r\n                    {createArrayOfInputs('description')}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Image\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <input type=\"file\" id=\"image-input\" className=\"input-file\"></input>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleRemoveImage}>\r\n                      Remove image\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-start\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      More Button\r\n                    </Typography>\r\n                    <TextField id=\"btn-link-field\" label=\"Link for button\" defaultValue={widgetData.button.url} inputProps={{'data-path': 'button.url'}}/>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {createArrayOfInputs('button.title')}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Audience\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl style={styles.audienceInputContainer}>\r\n                      <Select\r\n                        id=\"audience-select\"\r\n                        value={audience}\r\n                        onChange={handleAudienceChange}\r\n                        inputProps={{'data-path': 'audience'}}\r\n                        >\r\n                        <MenuItem value='MOBILE'>MOBILE</MenuItem>\r\n                        <MenuItem value='BROADBAND'>BROADBAND</MenuItem>\r\n                        <MenuItem value='ALL'>ALL</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  <Grid item>\r\n                    <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                      Availability\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  className={`${classes.bottomSpacing}`}\r\n                  >\r\n                  <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From (mm/dd/yyyy)\"\r\n                        value={selectedFromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        inputProps={{'data-path': 'fromDate'}}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-till\"\r\n                        label=\"Till (mm/dd/yyyy)\"\r\n                        value={selectedTillDate}\r\n                        onChange={handleTillDateChange}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        inputProps={{'data-path': 'tillDate'}}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                  spacing={1}\r\n                  alignItems=\"flex-end\"\r\n                  justify=\"space-around\"\r\n                  >\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"secondary\" component=\"span\" onClick={handleRemoveWidget} startIcon={<DeleteIcon />}>\r\n                      Remove Widget\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleCloseEditModal}>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleEditSubmit} className=\"save-btn\">\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n              <Snackbar open={!!errorSnackbar.length} autoHideDuration={3000} onClose={hideErrorSnackbar}>\r\n                <Alert onClose={hideErrorSnackbar} severity=\"error\">\r\n                  {errorSnackbar}\r\n                </Alert>\r\n              </Snackbar>\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            open={openCopyModal}\r\n            onClose={handleCloseCopyModal}\r\n            className=\"modal-handler\"\r\n          >\r\n            <div className=\"modal-container\">\r\n              <form autoComplete=\"off\">\r\n                <Typography variant=\"h5\" component=\"h2\" className=\"block-title\">\r\n                  Select target environment\r\n                </Typography>\r\n                <FormControl className=\"copy-env-dropdown\">\r\n                  <Select\r\n                    id=\"target-env-select\"\r\n                    value={targetEnv}\r\n                    onChange={handleTargetEnvChange}\r\n                  >\r\n                    <MenuItem value='JIT'>JIT</MenuItem>\r\n                    <MenuItem value='UAT'>UAT</MenuItem>\r\n                    <MenuItem value='PROD'>PROD</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className=\"copy-btns-container\">\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"default\" component=\"span\" onClick={handleCloseCopyModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleCopySubmit}>\r\n                      COPY WIDGET\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Modal>\r\n        </Paper>\r\n        <Box className=\"widget-item-bottom-block\">\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {widgetData.audience}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {format(new Date(widgetData.fromDate), 'dd/MM/yyyy') + ' - ' + format(new Date(widgetData.tillDate), 'dd/MM/yyyy')}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Draggable>\r\n  );\r\n}\r\n","//Transforms local time to Universal (without GMT)\r\nexport const getUTCDate = (date) => {\r\n  const dt = new Date(date);\r\n  return new Date(Date.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate()));\r\n}\r\n","import { getUTCDate } from './getUTCDate';\r\n\r\n\r\n//Converts 1548882000000 to '2019-01-30T21:00:00'\r\nexport const getDateConventionalString = milliseconds => {\r\n  const ms = Number(milliseconds);\r\n  const dt = getUTCDate(new Date(ms));\r\n  const resultString = dt.toISOString().split('.')[0];\r\n\r\n  return resultString;\r\n}\r\n","import request from 'request';\r\n\r\n\r\n//Sends requests one by one\r\nclass Requester {\r\n  constructor(tagData) {\r\n    this.queue = [];\r\n    this.interval = 2000;\r\n    this.timer = '';\r\n    this.tagData = tagData;\r\n  }\r\n\r\n  sendTag() {\r\n    const dataString = '{\"tag_name\": \"' + this.tagData.env + '-' + new Date().getTime() + '\"}';\r\n\r\n    const options = {\r\n      url: `https://api.github.com/repos/LibertyGlobal/${this.tagData.repoName}/releases`,\r\n      method: 'POST',\r\n      body: dataString,\r\n      auth: {\r\n        'user': this.tagData.user,\r\n        'pass': this.tagData.token\r\n      }\r\n    };\r\n\r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        console.log(body);\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    request(options, callback);\r\n  }\r\n\r\n  sendRequest() {\r\n    if (this.queue.length) {\r\n      const dataObj = this.queue.shift();\r\n      const options = dataObj.opt;\r\n      const callback = dataObj.clb;\r\n      request(options, callback);\r\n    } else {\r\n      this.sendTag();\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  start() {\r\n    if (!this.timer) {\r\n      const that = this;\r\n      this.timer = setInterval(() => {\r\n        that.sendRequest();\r\n      }, this.interval);\r\n    }\r\n  }\r\n\r\n  addToQueue(options, callback) {\r\n    const obj = {'opt': options, 'clb': callback};\r\n    this.queue.push(obj);\r\n    this.start();\r\n  }\r\n}\r\n\r\nexport default Requester;\r\n","import { getLanguagesForCurrentCountry } from './../Utils/getLanguagesForCurrentCountry';\r\n\r\n\r\nconst mockWidgetDataObj = {\r\n  \"title\": {},\r\n  \"description\": {},\r\n  \"fromDate\": \"2020-01-01T00:00:00\",\r\n  \"tillDate\": \"2021-01-01T00:00:00\",\r\n  \"audience\": \"ALL\",\r\n  \"imageUrl\": \"\",\r\n  \"button\": {\r\n    \"url\": \"https://www.libertyglobal.com/\",\r\n    \"title\": {}\r\n  }\r\n};\r\n\r\nexport const getMockWidgetDataObj = () => {\r\n  const currentLanguages = getLanguagesForCurrentCountry();\r\n\r\n  currentLanguages.forEach(lang => {\r\n    mockWidgetDataObj.title[lang] = `Title text (${lang})`;\r\n    mockWidgetDataObj.description[lang] = `Description text (${lang})`;\r\n    mockWidgetDataObj.button.title[lang] = `Button text (${lang})`;\r\n  });\r\n\r\n  return mockWidgetDataObj;\r\n};\r\n","const translations = {\r\n  'EN': {\r\n    login_heading: 'Login with your GitHub credentials',\r\n    login_user_name: 'User Name',\r\n    login_token: 'Personal Access Token',\r\n    login_instructions_link: 'Read Me',\r\n    repos_heading: 'Pick Repository',\r\n    repos_btn: 'Start Editing',\r\n    carousel_heading: 'widgets',\r\n    carousel_main_controls_btn_reorder: 'Change order',\r\n    carousel_main_controls_btn_add: 'Add widget',\r\n    carousel_main_controls_btn_publish: 'Publish',\r\n    carousel_main_controls_btn_revert: 'Revert all changes',\r\n    widget_controls_btn_copy: 'Copy',\r\n    widget_controls_btn_edit: 'Edit'\r\n  }\r\n};\r\n\r\nexport default translations;\r\n","import translations from './../Data/translations';\r\n\r\nconst getTranslation = keyword => {\r\n  const lang = 'EN';\r\n  return translations[lang][keyword];\r\n}\r\n\r\nexport default getTranslation;\r\n","//returns 'by'\r\nexport const getCurrentCountry = () => {\r\n  const currentCountry = JSON.parse(localStorage.getItem('instant-widgets-current-repo'))[0].name.split('capp-instantWidgets-')[1];\r\n  return currentCountry.toLowerCase();\r\n}\r\n","import React from 'react';\r\nimport request from 'request';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\nimport getTranslation from './../../Utils/getTranslation';\r\n\r\n\r\nexport const LoginDialog = props => {\r\n  const handleSubmit = () => {\r\n    const options = {\r\n      url: 'https://api.github.com/user/repos?per_page=1000',\r\n      auth: {\r\n        'user': document.getElementById('name').value,\r\n        'pass': document.getElementById('pass').value\r\n      }\r\n    };\r\n    \r\n    function callback(error, response, body) {\r\n      if (!error && response.statusCode === 200) {\r\n        const arrayOfAllRepos = JSON.parse(body);\r\n        const arrayOfRepos = arrayOfAllRepos.filter(repoObj => {\r\n          return repoObj.name.startsWith('capp-instantWidgets-');\r\n        });\r\n        localStorage.setItem('instant-widgets-repos', JSON.stringify(arrayOfRepos));\r\n        localStorage.setItem('instant-widgets-creds', document.getElementById('name').value + ':' + document.getElementById('pass').value);\r\n        props.setScreen('repos');\r\n        window.location = '/?page=repos';\r\n      } else {\r\n        console.error('ERROR');\r\n        props.notify('Incorrect credentials', 'error');\r\n      }\r\n    }\r\n    \r\n    request(options, callback);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={true} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{getTranslation('login_heading')}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={getTranslation('login_user_name')}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"pass\"\r\n            label={getTranslation('login_token')}\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n          <DialogActions>\r\n            <Button onClick={handleSubmit} color=\"primary\">\r\n              Login\r\n            </Button>\r\n          </DialogActions>\r\n          <Link target=\"_blank\" href=\"https://github.com/instant-widgets-editor/instant-widgets-editor.github.io/blob/master/README.md#instant-widgets-editor\">\r\n            {getTranslation('login_instructions_link')}\r\n          </Link>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport getTranslation from './../../Utils/getTranslation';\r\n\r\n\r\nexport const ReposDialog = props => {\r\n  const arrayOfAllRepos = JSON.parse(localStorage.getItem('instant-widgets-repos'));\r\n  const [value, setValue] = React.useState(arrayOfAllRepos[0].name);\r\n  \r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const currentRepoObj = arrayOfAllRepos.filter((repoObj => {return repoObj.name === value}));\r\n    localStorage.setItem('instant-widgets-current-repo', JSON.stringify(currentRepoObj));\r\n    props.setScreen('widgets');\r\n    window.location = '/?page=widgets';\r\n  };\r\n\r\n  const RadioList = ({arrOfRepos}) => (\r\n    <div>\r\n      {arrOfRepos.map((repoObj) => (\r\n        <div key={repoObj.id}><FormControlLabel value={repoObj.name} control={<Radio />} label={repoObj.name} /></div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={true} aria-labelledby=\"form-repos-dialog-title\">\r\n        <DialogTitle id=\"form-repos-dialog-title\">{getTranslation('repos_heading')}</DialogTitle>\r\n        <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"repos\" name=\"repos1\" value={value} onChange={handleChange}>\r\n            <RadioList arrOfRepos={arrayOfAllRepos} />\r\n          </RadioGroup>\r\n        </FormControl>\r\n          <DialogActions>\r\n            <Button onClick={handleSubmit} color=\"primary\">\r\n              {getTranslation('repos_btn')}\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Carousel from './../Carousel';\r\n\r\n\r\nexport default function Widgets(props) {\r\n  return (\r\n    <div>\r\n      <Carousel env=\"PROD\" notify={props.notify} />\r\n      <Carousel env=\"UAT\" notify={props.notify} />\r\n      <Carousel env=\"JIT\" notify={props.notify} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './UI.css';\r\nimport { LoginDialog } from '../LoginDialog';\r\nimport { ReposDialog } from '../ReposDialog';\r\nimport Widgets from '../Widgets';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\nfunction Screen() {\r\n  const currentScreen = String(new URLSearchParams(window.location.search).get('page'));\r\n\r\n  const [screen, setScreen] = React.useState(currentScreen);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const notify = (text, type = 'default') => {\r\n    //type ought to be 'success', 'error', 'warning', 'info', or 'default'\r\n    enqueueSnackbar(text, { variant: type });\r\n  };\r\n\r\n  const renderScreen = name => {\r\n    if (name === 'repos') {\r\n      return <ReposDialog\r\n        setScreen={newScreenName => setScreen(newScreenName)}\r\n      />;\r\n    } else if (name === 'widgets') {\r\n      return <Widgets\r\n        notify={notify}\r\n      />\r\n    } else {\r\n      return <LoginDialog\r\n        setScreen={newScreenName => setScreen(newScreenName)}\r\n        notify={notify}\r\n      />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {renderScreen(screen)}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction UI() {\r\n  return (\r\n    <div className=\"UI\">\r\n      <SnackbarProvider maxSnack={3}>\r\n        <Screen />\r\n      </SnackbarProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport UI from './Components/UI';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-Container\">\r\n      <UI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './index.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nexport const ConfirmationPopup = (text, callback) => {\r\n  const UI = ({ onClose }) => {\r\n\r\n    const handleConfirm = () => {\r\n      callback();\r\n      onClose();\r\n    }\r\n\r\n    return (\r\n      <Box className=\"confirmation-popup\">\r\n        <Dialog\r\n          open={true}\r\n          onClose={onClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirm} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const options = {\r\n    customUI: UI,\r\n    childrenElement: () => <div />,\r\n    closeOnEscape: true,\r\n    closeOnClickOutside: true,\r\n    willUnmount: () => {},\r\n    afterClose: () => {},\r\n    onClickOutside: () => {},\r\n    onKeypressEscape: () => {}\r\n  };\r\n\r\n  confirmAlert(options);\r\n}\r\n"],"sourceRoot":""}